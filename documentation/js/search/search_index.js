var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AddClickShortenedUrlsService.html",[0,0.296,1,1.919]],["body/injectables/AddClickShortenedUrlsService.html",[0,0.416,1,2.699,2,1.007,3,0.276,4,0.244,5,0.244,6,4.607,7,3.899,8,3.899,9,2.521,10,2.01,11,0.456,12,1.038,13,1.737,14,4.82,15,1.442,16,3.59,17,2.594,18,0.722,19,2.677,20,1.038,21,0.025,22,0.903,23,0.613,24,0.969,25,4.82,26,4.82,27,2.115,28,3.59,29,0.903,30,5.441,31,1.737,32,3.229,33,1.038,34,3.594,35,2.941,36,0.419,37,1.602,38,0.496,39,1.396,40,1.602,41,1.602,42,2.01,43,0.276,44,0.013,45,2.19,46,1.223,47,1.074,48,3.59,49,1.007,50,1.494,51,0.943,52,1.753,53,3.59,54,3.59,55,2.677,56,3.59,57,0.017,58,0.017]],["title/modules/AppModule.html",[59,1.332,60,2.298]],["body/modules/AppModule.html",[3,0.267,4,0.236,5,0.236,12,0.747,18,0.52,20,0.747,21,0.026,22,0.65,23,0.441,24,0.698,33,0.747,36,0.495,38,0.48,43,0.267,44,0.012,57,0.017,58,0.017,59,2.079,60,4.497,61,1.664,62,1.795,63,2.118,64,2.118,65,1.795,66,1.944,67,1.944,68,2.939,69,2.939,70,3.773,71,3.198,72,3.773,73,3.463,74,2.875,75,2.118,76,1.944,77,3.472,78,3.158,79,3.472,80,4.712,81,5.737,82,3.472,83,3.472,84,2.327,85,4.712,86,2.939,87,2.589,88,3.472,89,3.472,90,3.472,91,3.472,92,3.472,93,2.327,94,3.472,95,2.939,96,2.118,97,2.939,98,2.939,99,1.444,100,2.939,101,2.939,102,2.939,103,2.939,104,2.589,105,2.939,106,2.939,107,2.939,108,2.118,109,3.472]],["title/controllers/AuthController.html",[110,1.772,111,2.298]],["body/controllers/AuthController.html",[3,0.288,4,0.254,5,0.254,11,0.476,12,1.068,13,1.774,18,0.561,20,0.807,21,0.025,22,0.702,23,0.63,24,0.753,29,1.041,33,0.807,36,0.474,38,0.518,43,0.288,44,0.013,57,0.018,58,0.018,99,1.559,110,1.938,111,3.325,112,1.938,113,3.174,114,3.174,115,3.748,116,4.412,117,3.748,118,1.797,119,3.748,120,2.213,121,3.748,122,4.96,123,3.699,124,3.727,125,4.96,126,3.748,127,4.96,128,4.2,129,4.96,130,3.748,131,3.325,132,2.099,133,2.099,134,2.795,135,2.795,136,2.874,137,3.748,138,2.513,139,2.795,140,2.795,141,4.96,142,3.699,143,4.96,144,2.795,145,1.938,146,3.748,147,3.748,148,3.748,149,2.795,150,3.748,151,3.748,152,2.795,153,1.559,154,3.174,155,3.748,156,0.985,157,3.748]],["title/modules/AuthModule.html",[59,1.332,70,2.091]],["body/modules/AuthModule.html",[3,0.269,4,0.237,5,0.237,21,0.026,36,0.503,38,0.483,43,0.269,44,0.013,57,0.017,58,0.017,59,2.087,61,1.677,62,1.809,63,2.134,64,2.134,65,1.809,66,3.007,67,3.007,70,4.125,73,3.471,74,2.89,75,2.134,76,1.959,78,3.175,86,2.962,87,2.609,95,2.962,96,2.134,97,2.962,98,2.962,99,1.455,100,2.962,101,2.962,102,2.962,103,2.962,104,2.609,105,2.962,106,2.962,107,2.962,111,3.599,112,2.449,136,3.473,158,2.962,159,3.498,160,2.962,161,2.962,162,3.782,163,3.782,164,3.498,165,2.962,166,3.498,167,3.498,168,3.498,169,4.736,170,1.959,171,3.498]],["title/injectables/AuthService.html",[0,0.296,136,1.772]],["body/injectables/AuthService.html",[0,0.363,2,0.828,3,0.227,4,0.2,5,0.2,11,0.375,12,0.906,13,1.876,15,1.259,18,0.735,20,1.056,21,0.025,22,0.919,23,0.624,24,0.986,29,1.002,31,1.344,33,1.151,36,0.412,38,0.408,43,0.227,44,0.011,46,1.434,47,1.259,49,1.376,50,2.352,51,1.106,52,1.074,57,0.015,58,0.015,96,1.802,116,3.14,120,2.699,128,2.5,132,1.654,136,2.177,153,2.573,156,1.106,172,2.5,173,3.565,174,2.953,175,2.386,176,5.122,177,2.953,178,3.14,179,4.21,180,2.711,181,2.953,182,1.969,183,3.565,184,4.217,185,2.747,186,2.177,187,3.565,188,4.906,189,3.565,190,2.107,191,2.953,192,3.989,193,2.822,194,3.565,195,2.953,196,1.802,197,1.979,198,2.5,199,2.953,200,1.802,201,2.953,202,2.953,203,2.953,204,2.202,205,2.953]],["title/classes/CreateShortenedUrlsDto.html",[44,0.012,206,1.919]],["body/classes/CreateShortenedUrlsDto.html",[3,0.343,4,0.303,5,0.303,9,2.455,11,0.567,18,0.668,21,0.025,23,0.567,29,0.835,32,2.867,36,0.427,43,0.343,44,0.02,47,1.805,57,0.02,58,0.02,118,2.138,145,2.305,190,1.889,206,3.105,207,2.138,208,4.135,209,3.325,210,2.659,211,3.682,212,3.325,213,3.105,214,4.459,215,4.459,216,4.135,217,4.135,218,4.135,219,2.989,220,3.776]],["title/injectables/CreateShortenedUrlsService.html",[0,0.296,221,1.919]],["body/injectables/CreateShortenedUrlsService.html",[0,0.277,2,0.577,3,0.158,4,0.14,5,0.14,9,2.511,10,1.152,11,0.261,12,0.692,13,1.821,15,0.961,17,1.993,18,0.726,20,1.043,21,0.026,22,0.908,23,0.616,24,0.974,27,2.197,29,1.04,31,1.547,32,3.294,33,1.195,35,3.134,36,0.373,37,0.918,38,0.284,39,0.8,40,0.918,41,0.918,42,1.152,43,0.158,44,0.007,45,1.255,46,1.094,47,0.961,49,1.44,50,2.232,51,1.41,52,1.763,57,0.012,58,0.012,123,2.396,132,1.152,156,1.174,182,1.45,183,1.742,186,1.661,187,2.721,190,2.025,206,3.109,211,3.387,221,1.799,222,3.831,223,3.953,224,3.953,225,2.142,226,3.213,227,2.058,228,3.347,229,2.31,230,2.058,231,3.213,232,2.058,233,2.058,234,4.349,235,3.783,236,3.783,237,2.995,238,2.058,239,3.123,240,2.058,241,2.058,242,2.995,243,2.058,244,3.213,245,3.213,246,2.058,247,3.614,248,4.544,249,1.742,250,1.379,251,1.064,252,1.379,253,0.748,254,3.213,255,2.058,256,3.953,257,2.058,258,2.058,259,2.058,260,2.65,261,2.058,262,2.058,263,2.058,264,2.058,265,2.154,266,2.721,267,2.721,268,4.468,269,2.058,270,2.058,271,2.058,272,2.058,273,1.742,274,2.058,275,1.742,276,1.534]],["title/classes/CreateUserDto.html",[44,0.012,277,1.919]],["body/classes/CreateUserDto.html",[3,0.271,4,0.239,5,0.239,11,0.447,18,0.806,21,0.025,23,0.684,24,0.955,29,0.89,36,0.366,43,0.271,44,0.017,47,1.957,57,0.017,58,0.017,118,2.581,120,2.687,145,1.818,153,2.722,182,1.725,190,2.052,207,1.686,210,2.279,212,3.544,213,3.229,216,4.015,217,4.015,218,3.544,219,2.357,247,4.015,273,4.024,277,2.661,278,4.301,279,2.622,280,3.373,281,3.609,282,3.516,283,3.516,284,3.516,285,3.516,286,3.516,287,3.516,288,3.516,289,4.883,290,3.866,291,4.753,292,4.753,293,3.516,294,4.753,295,4.024,296,4.753,297,3.516,298,3.516,299,3.516]],["title/injectables/CreateUsersService.html",[0,0.296,300,1.919]],["body/injectables/CreateUsersService.html",[0,0.394,2,0.928,3,0.255,4,0.225,5,0.225,11,0.421,12,0.982,13,1.666,15,1.365,17,2.509,18,0.683,20,0.982,21,0.025,22,0.855,23,0.58,24,0.917,29,0.62,33,0.982,36,0.469,37,1.477,38,0.458,39,1.287,43,0.255,44,0.012,46,1.554,47,1.365,49,0.928,50,2.537,51,1.199,52,1.898,57,0.016,58,0.016,153,1.378,156,0.87,175,2.509,178,3.892,180,1.588,182,1.869,185,2.555,186,2.359,193,3.058,196,2.02,197,2.22,200,2.783,225,2.187,249,2.804,251,1.712,253,1.659,277,3.498,300,2.555,301,3.892,302,2.22,303,3.311,304,2.804,305,3.863,306,3.863,307,3.311,308,3.402,309,4.562,310,4.762,311,5.624,312,2.22,313,2.22,314,2.469,315,2.469,316,3.311,317,3.863,318,3.311,319,3.311,320,3.311]],["title/modules/DatabaseModule.html",[59,1.332,71,1.772]],["body/modules/DatabaseModule.html",[3,0.383,4,0.338,5,0.338,21,0.025,36,0.456,38,0.688,43,0.383,44,0.018,57,0.021,58,0.021,59,2.306,61,2.388,66,2.789,67,2.789,71,3.066,321,4.98,322,4.724,323,4.98]],["title/injectables/DeleteShortenedUrlsService.html",[0,0.296,324,1.919]],["body/injectables/DeleteShortenedUrlsService.html",[0,0.415,2,1.004,3,0.276,4,0.243,5,0.243,9,2.426,10,2.005,11,0.455,12,1.036,13,1.734,15,1.439,17,2.592,18,0.721,20,1.036,21,0.025,22,0.901,23,0.612,24,0.967,27,2.358,29,0.901,31,2.096,32,3.004,33,0.771,36,0.418,37,1.597,38,0.495,39,1.392,40,1.597,41,1.597,42,2.005,43,0.276,44,0.013,45,2.185,46,1.22,47,1.071,49,1.349,51,0.941,52,1.75,57,0.017,58,0.017,99,1.49,182,1.626,239,3.134,253,1.302,280,2.005,324,2.694,325,4.052,326,4.601,327,3.581,328,3.581,329,4.812,330,4.074,331,3.581,332,3.581,333,3.581,334,2.67,335,3.581]],["title/classes/HttpAllExceptionFilter.html",[44,0.012,336,2.556]],["body/classes/HttpAllExceptionFilter.html",[3,0.242,4,0.214,5,0.214,11,0.4,12,0.949,15,1.318,18,0.66,20,0.949,21,0.025,22,0.826,23,0.4,24,1.106,29,1.031,33,0.678,35,1.922,36,0.339,38,0.435,43,0.242,44,0.011,46,1.073,47,0.943,49,1.425,51,1.522,57,0.016,58,0.016,84,2.112,108,2.689,133,3.083,154,4.304,186,2.279,207,1.511,253,1.603,290,3.407,308,2.35,336,3.791,337,4.304,338,2.668,339,4.304,340,3.791,341,3.151,342,3.151,343,5.218,344,4.304,345,3.732,346,6.163,347,4.477,348,4.905,349,3.151,350,5.218,351,3.732,352,4.32,353,4.407,354,2.112,355,2.112,356,3.151,357,3.151,358,2.35,359,3.732,360,2.668,361,2.668,362,2.689,363,2.668,364,3.151,365,2.35,366,2.668,367,2.668,368,3.151,369,4.407,370,3.151,371,3.151,372,3.151,373,3.151,374,3.151,375,3.151,376,2.668,377,3.151,378,2.668,379,3.151,380,2.668]],["title/injectables/JwtAuthGuard.html",[0,0.296,381,2.091]],["body/injectables/JwtAuthGuard.html",[0,0.391,2,0.92,3,0.252,4,0.223,5,0.223,11,0.417,12,0.975,18,0.679,20,0.975,21,0.025,22,0.849,23,0.417,24,0.911,29,1.049,33,1.367,36,0.349,38,0.453,43,0.252,44,0.012,49,1.456,57,0.016,58,0.016,133,1.836,156,1.191,170,1.836,182,1.952,184,3.38,185,3.136,253,1.193,265,2.198,275,4.397,281,2.198,358,2.446,362,3.168,381,2.765,382,3.481,383,2.446,384,2.538,385,4.532,386,5.879,387,4.532,388,4.532,389,4.977,390,3.28,391,4.742,392,3.837,393,5.193,394,5.193,395,4.532,396,3.28,397,5.601,398,4.532,399,4.532,400,6.079,401,4.532,402,4.532,403,4.397,404,2.777,405,3.28,406,3.28,407,3.28,408,3.28,409,2.446,410,2.446,411,3.28,412,2.446]],["title/injectables/JwtStrategy.html",[0,0.296,162,2.091]],["body/injectables/JwtStrategy.html",[0,0.453,2,1.145,3,0.314,4,0.277,5,0.277,11,0.519,12,1.129,13,1.85,15,1.734,18,0.786,20,0.879,21,0.025,22,0.765,23,0.519,24,0.821,31,1.675,33,0.879,36,0.446,38,0.565,43,0.314,44,0.015,51,1.073,57,0.019,58,0.019,104,3.046,120,2.34,132,2.287,156,1.073,162,3.201,170,2.287,192,3.913,204,3.913,239,2.112,384,2.938,413,3.459,414,4.442,415,4.085,416,5.247,417,4.085,418,4.085,419,3.459,420,3.046,421,2.738,422,3.459,423,3.459,424,4.085,425,4.085,426,4.085,427,3.046,428,4.085,429,4.442]],["title/injectables/ListShortenedUrlsService.html",[0,0.296,229,1.772]],["body/injectables/ListShortenedUrlsService.html",[0,0.299,1,2.631,2,0.634,3,0.174,4,0.154,5,0.154,7,2.318,8,2.318,9,2.534,10,1.267,11,0.288,12,0.744,13,1.972,15,1.034,17,2.096,18,0.758,19,1.687,20,1.09,21,0.026,22,0.948,23,0.643,24,1.017,27,2.083,29,1.073,31,1.704,32,3.39,33,1.233,35,2.867,36,0.362,37,1.009,38,0.313,39,0.879,40,1.009,41,1.009,42,1.267,43,0.174,44,0.008,45,1.38,46,1.178,47,1.034,49,1.419,50,2.383,51,0.908,52,1.841,57,0.012,58,0.012,99,0.941,132,1.936,156,1.235,182,1.661,190,2.104,211,3.388,229,1.788,234,4.97,239,3.035,251,1.788,252,1.516,260,3.15,280,1.267,430,3.98,431,3.458,432,3.458,433,2.928,434,3.553,435,2.262,436,4.197,437,3.458,438,3.458,439,2.262,440,3.458,441,2.262,442,2.928,443,2.262,444,3.775,445,2.928,446,2.262,447,1.916,448,2.813,449,2.262,450,2.262,451,1.687,452,1.38,453,2.262,454,2.262,455,2.262,456,3.458,457,1.17,458,2.262,459,2.262,460,2.262]],["title/injectables/ListUsersService.html",[0,0.296,175,1.529]],["body/injectables/ListUsersService.html",[0,0.297,2,0.629,3,0.173,4,0.152,5,0.152,11,0.285,12,0.74,13,1.968,15,1.028,17,2.087,18,0.755,20,1.007,21,0.026,22,0.876,23,0.595,24,0.94,27,1.519,29,0.782,31,1.869,33,1.286,36,0.36,37,1.001,38,0.31,39,0.872,43,0.173,44,0.008,46,0.764,47,0.671,49,1.312,50,2.597,51,0.903,52,1.702,57,0.012,58,0.012,99,1.429,120,2.885,153,2.304,156,1.229,173,3.535,175,1.533,180,1.076,182,1.988,189,1.9,190,2.126,193,3.136,194,3.962,197,1.504,198,2.909,200,2.096,237,2.303,242,2.303,251,1.776,253,0.816,265,2.303,266,3.962,267,2.909,302,1.504,314,1.673,315,1.673,409,1.673,410,1.673,412,1.673,427,2.562,448,3.136,461,3.968,462,3.962,463,2.909,464,3.436,465,2.244,466,2.244,467,2.909,468,2.244,469,3.489,470,2.909,471,2.244,472,3.436,473,3.436,474,2.244,475,3.436,476,3.962,477,2.244,478,3.436,479,3.436,480,3.436,481,3.436,482,3.489,483,4.175,484,1.673,485,2.244,486,2.244,487,2.909,488,2.909,489,3.436,490,3.436,491,2.244,492,2.244]],["title/injectables/LocalAuthGuard.html",[0,0.296,138,2.298]],["body/injectables/LocalAuthGuard.html",[0,0.512,2,1.396,3,0.383,4,0.338,5,0.338,21,0.025,36,0.456,38,0.688,43,0.383,44,0.018,57,0.021,58,0.021,138,3.976,139,3.714,170,2.789,383,3.714,384,3.321,404,4.217,493,5.931]],["title/injectables/LocalStrategy.html",[0,0.296,163,2.091]],["body/injectables/LocalStrategy.html",[0,0.431,2,1.06,3,0.291,4,0.256,5,0.256,11,0.48,12,1.074,13,1.782,15,1.131,18,0.747,20,1.074,21,0.025,22,0.934,23,0.634,24,1.002,33,0.814,36,0.457,38,0.522,43,0.291,44,0.014,50,2.075,51,0.993,52,1.375,57,0.018,58,0.018,99,1.572,120,2.648,131,2.533,136,3.277,149,2.818,153,2.567,156,0.993,163,3.043,165,3.2,170,2.116,182,1.67,190,2.159,192,3.719,253,1.375,384,2.793,403,4.223,412,2.818,414,4.223,419,3.2,420,2.818,422,3.2,423,3.2,494,3.2,495,3.779,496,3.779,497,4.988,498,3.779,499,3.2,500,3.779,501,3.779,502,3.779,503,3.779]],["title/injectables/LoggingInterceptor.html",[0,0.296,504,2.556]],["body/injectables/LoggingInterceptor.html",[0,0.416,2,1.007,3,0.276,4,0.244,5,0.244,11,0.456,12,1.038,18,0.722,20,0.773,21,0.025,22,0.673,23,0.456,24,0.722,29,0.903,33,1.038,36,0.419,38,0.496,43,0.276,44,0.013,46,1.853,49,1.352,51,0.943,57,0.017,58,0.017,108,2.19,133,2.01,156,0.943,210,2.311,253,1.753,343,4.924,361,3.04,365,3.594,389,5.137,391,4.081,392,4.081,504,3.594,505,3.04,506,4.82,507,4.82,508,5.403,509,6.067,510,3.59,511,4.82,512,4.82,513,6.246,514,4.82,515,2.407,516,3.04,517,4.82,518,3.59,519,4.82,520,3.04,521,3.59,522,3.59,523,3.59,524,3.04,525,3.59,526,3.59,527,3.59,528,2.677,529,4.82,530,3.59,531,3.59,532,3.59,533,3.59]],["title/classes/LoginDto.html",[44,0.012,124,2.298]],["body/classes/LoginDto.html",[3,0.323,4,0.285,5,0.285,11,0.534,18,0.8,21,0.025,23,0.679,29,1,36,0.411,43,0.323,44,0.019,57,0.019,58,0.019,116,4.607,118,2.56,120,2.845,124,3.579,145,2.171,153,2.713,190,2.104,207,2.013,210,2.56,212,3.981,213,3.46,216,4.378,217,4.378,218,3.981,219,2.814,295,4.521,534,3.555,535,4.198,536,4.198,537,4.198,538,4.198,539,4.198]],["title/classes/ModelNotFoundException.html",[44,0.012,540,2.556]],["body/classes/ModelNotFoundException.html",[3,0.288,4,0.254,5,0.254,11,0.476,12,1.068,18,0.561,20,0.807,21,0.025,22,0.702,23,0.476,24,0.753,29,0.929,33,0.807,36,0.428,38,0.518,43,0.288,44,0.013,49,1.391,51,1.303,57,0.018,58,0.018,108,3.026,156,0.985,185,2.778,186,2.565,207,1.797,237,3.325,290,2.513,339,4.707,340,4.146,345,4.2,347,4.716,348,5.211,350,5.01,351,4.2,352,4.59,354,2.513,355,2.513,358,2.795,360,3.174,362,3.026,363,3.174,365,2.795,366,3.174,367,3.174,540,3.699,541,4.2,542,3.174,543,6.324,544,3.748,545,3.748,546,3.748,547,3.748,548,3.748,549,3.748,550,3.748,551,3.748]],["title/controllers/ShortenedUrlsController.html",[110,1.772,552,2.298]],["body/controllers/ShortenedUrlsController.html",[3,0.138,4,0.122,5,0.122,9,2.526,11,0.229,12,0.622,13,1.744,15,0.538,18,0.68,20,0.977,21,0.026,22,0.85,23,0.577,24,0.912,27,1.988,29,0.85,31,1.963,32,3.285,33,1.176,36,0.421,38,0.249,43,0.138,44,0.006,46,1.412,47,1.24,49,0.505,51,0.473,52,1.317,55,1.342,57,0.01,58,0.01,110,1.494,112,0.93,118,2.177,131,3.663,132,2.028,133,2.321,134,2.155,135,1.342,140,1.342,142,3.799,144,1.342,145,0.93,152,3.615,156,1.193,182,1.083,190,1.233,206,2.852,208,1.342,211,2.209,213,2.321,220,2.447,221,1.618,222,1.342,225,1.988,228,1.524,229,1.494,239,1.494,250,1.937,252,2.779,253,1.508,260,3.759,324,1.618,325,1.342,326,3.51,330,1.524,354,1.206,381,1.098,382,1.206,430,1.342,433,2.447,434,2.447,442,1.524,444,2.7,445,1.524,448,2.779,451,2.7,452,2.209,457,2.825,482,2.7,552,1.937,553,3.615,554,1.524,555,3.621,556,1.8,557,1.8,558,1.8,559,4.484,560,1.8,561,1.8,562,1.8,563,1.8,564,1.8,565,1.8,566,3.066,567,1.8,568,1.8,569,1.8,570,1.8,571,1.8,572,1.206,573,3.231,574,1.524,575,1.524,576,1.8,577,1.8,578,3.066,579,1.524,580,1.524,581,1.342,582,1.618,583,1.342,584,2.447,585,2.89,586,3.51,587,1.8,588,1.8,589,1.8,590,1.8,591,3.066,592,1.8,593,1.8,594,3.51,595,1.8,596,1.8,597,3.066,598,1.8,599,1.8,600,3.621,601,3.621,602,2.7,603,3.066,604,2.89,605,1.342,606,1.8,607,1.8,608,1.8,609,1.8,610,1.8,611,1.524,612,1.8,613,1.524,614,1.524,615,1.8,616,1.524,617,1.8,618,1.8,619,2.89,620,1.8,621,1.8,622,1.8,623,1.8]],["title/entities/ShortenedUrlsModel.html",[40,1.529,624,2.091]],["body/entities/ShortenedUrlsModel.html",[3,0.187,4,0.165,5,0.165,11,0.464,18,0.913,21,0.026,22,1.241,23,0.814,27,1.995,31,1.816,36,0.281,39,0.944,40,1.627,41,2.763,43,0.187,44,0.009,57,0.013,58,0.013,99,2.435,118,2.924,180,2.335,182,1.311,190,1.659,210,1.749,211,2.673,239,2.265,242,2.445,260,3.265,276,2.72,280,2.924,281,2.445,334,4.09,451,3.267,452,2.673,469,2.72,515,3.923,528,3.632,624,1.481,625,1.627,626,2.055,627,3.267,628,4.381,629,3.088,630,2.427,631,4.871,632,3.647,633,2.427,634,2.055,635,4.644,636,3.088,637,2.427,638,2.427,639,3.647,640,3.647,641,2.427,642,2.055,643,3.088,644,2.427,645,4.124,646,4.124,647,3.647,648,2.427,649,3.647,650,4.124,651,2.427,652,2.055,653,3.088,654,2.427,655,2.427,656,2.427,657,2.427,658,4.381,659,2.427,660,2.055,661,3.088,662,3.647,663,3.647,664,3.647,665,3.088,666,3.088,667,2.427,668,2.427,669,2.427,670,2.427,671,1.81,672,2.055,673,2.427,674,2.427]],["title/modules/ShortenedUrlsModule.html",[59,1.332,72,2.091]],["body/modules/ShortenedUrlsModule.html",[1,3.458,3,0.266,4,0.234,5,0.234,7,2.315,8,2.315,9,2.327,21,0.025,36,0.502,38,0.477,41,1.541,43,0.266,44,0.012,57,0.017,58,0.017,59,2.074,61,1.656,62,1.786,63,2.107,64,2.107,65,1.786,66,2.987,67,1.934,71,3.193,72,4.179,74,2.865,75,2.107,76,1.934,78,3.148,112,2.428,221,3.458,225,1.656,229,3.193,251,1.786,252,4.013,324,3.458,447,2.925,457,1.786,552,3.576,553,2.576,566,2.925,582,3.458,675,2.925,676,2.925,677,3.454,678,3.454,679,3.454,680,3.454,681,3.502,682,3.454,683,2.925]],["title/classes/UpdateShortenedUrlsDto.html",[44,0.012,573,2.091]],["body/classes/UpdateShortenedUrlsDto.html",[3,0.374,4,0.33,5,0.33,9,2.271,21,0.025,36,0.45,43,0.374,44,0.017,57,0.021,58,0.021,206,3.509,207,2.328,209,3.621,225,2.328,250,3.255,384,3.271,573,3.564,581,3.621,684,5.306,685,3.621,686,3.621]],["title/classes/UpdateUserDto.html",[44,0.012,687,2.091]],["body/classes/UpdateUserDto.html",[3,0.382,4,0.337,5,0.337,21,0.025,36,0.455,43,0.382,44,0.018,57,0.021,58,0.021,207,2.379,225,2.379,277,2.779,279,3.7,312,3.326,384,3.314,684,4.201,685,3.7,686,3.7,687,3.611,688,3.7,689,5.918]],["title/injectables/UpdateUsersService.html",[0,0.296,690,1.919]],["body/injectables/UpdateUsersService.html",[0,0.374,2,0.864,3,0.237,4,0.209,5,0.209,11,0.391,12,0.934,13,1.602,15,1.297,17,2.431,18,0.649,20,0.934,21,0.025,22,0.812,23,0.551,24,0.872,27,1.826,29,0.577,31,1.902,33,0.934,34,4.444,36,0.459,37,1.374,38,0.426,39,1.197,43,0.237,44,0.011,46,1.477,47,1.297,49,1.216,50,2.267,51,1.14,52,2.089,57,0.016,58,0.016,153,1.281,156,0.809,175,2.431,178,3.744,180,1.477,182,1.927,185,2.429,186,2.242,193,2.907,196,1.879,197,2.064,200,1.879,236,3.672,237,2.064,251,1.592,302,2.064,304,2.608,310,3.672,312,2.064,313,2.064,314,2.297,315,2.297,317,4.251,409,2.297,410,2.297,457,2.242,572,2.907,687,3.878,690,2.429,691,3.744,692,3.08,693,3.672,694,3.08,695,4.337,696,2.608,697,3.08,698,3.08,699,3.08,700,3.08,701,3.08,702,3.08,703,3.08,704,3.08,705,3.08,706,3.08,707,3.08]],["title/injectables/UpdatetShortenedUrlsService.html",[0,0.296,582,1.919]],["body/injectables/UpdatetShortenedUrlsService.html",[0,0.385,2,0.9,3,0.247,4,0.218,5,0.218,9,2.552,10,1.798,11,0.408,12,0.961,13,1.639,15,1.336,17,2.476,18,0.669,19,2.394,20,0.961,21,0.025,22,0.836,23,0.567,24,0.897,27,2.298,29,0.836,31,2.095,32,3.203,33,0.961,34,3.33,35,3.386,36,0.427,37,1.432,38,0.444,39,1.248,40,1.432,41,1.432,42,1.798,43,0.247,44,0.012,45,1.958,46,1.093,47,0.96,49,1.44,50,2.136,51,0.843,52,1.867,57,0.016,58,0.016,123,3.33,156,0.843,182,1.536,186,2.308,239,3.016,250,2.152,457,2.869,572,2.152,573,3.964,582,2.5,583,3.829,696,2.718,708,3.21,709,4.465,710,3.21,711,4.465,712,3.21,713,3.21,714,3.21,715,3.21]],["title/injectables/UserMiddleware.html",[0,0.296,93,2.298]],["body/injectables/UserMiddleware.html",[0,0.39,2,0.915,3,0.251,4,0.221,5,0.221,11,0.415,12,0.972,15,0.976,18,0.676,20,0.972,21,0.026,22,0.846,23,0.574,24,0.908,29,1.047,31,1.042,33,0.703,36,0.348,38,0.451,43,0.251,44,0.012,47,0.976,49,1.567,51,1.187,57,0.016,58,0.016,84,3.747,93,3.472,96,1.991,108,1.991,131,3.028,133,2.9,149,2.434,156,0.858,176,5.371,182,0.976,184,3.368,185,3.13,204,2.434,235,2.764,242,3.028,265,2.188,308,2.434,340,2.434,344,2.764,352,3.368,362,1.991,421,3.472,508,5.371,613,4.386,716,2.764,717,3.824,718,3.264,719,3.264,720,4.517,721,4.517,722,4.517,723,4.517,724,5.59,725,3.264,726,4.386,727,4.517,728,4.517,729,4.517,730,3.264,731,3.264,732,3.264,733,3.264,734,3.264,735,3.264,736,3.264]],["title/controllers/UsersController.html",[110,1.772,737,2.298]],["body/controllers/UsersController.html",[3,0.147,4,0.13,5,0.13,11,0.243,12,0.654,15,0.573,18,0.643,20,0.812,21,0.026,22,0.707,23,0.48,24,0.759,27,1.373,29,0.933,31,1.969,33,0.925,36,0.417,38,0.265,43,0.147,44,0.007,46,1.286,47,1.129,49,0.537,55,3.203,57,0.011,58,0.011,99,1.948,110,0.991,112,0.991,114,1.622,118,2.06,120,2.602,134,2.265,135,1.429,140,1.429,142,3.493,144,1.429,145,0.991,152,3.203,156,1.129,175,1.355,182,1.88,190,1.286,196,2.303,213,2.79,225,2.389,253,1.562,277,2.79,278,1.429,280,2.623,290,2.036,300,1.701,301,1.429,305,1.622,306,1.622,312,2.036,354,1.284,362,1.853,376,2.572,378,2.572,380,2.572,381,1.169,382,1.284,448,3.631,452,2.857,457,2.576,461,1.429,462,3.637,463,2.572,467,1.622,469,3.716,470,1.622,482,2.815,487,4.219,488,4.219,559,5.024,572,1.284,574,1.622,575,1.622,578,2.572,579,1.622,580,1.622,584,2.572,586,3.637,591,3.196,594,4.219,597,3.196,602,4.425,603,5.024,605,1.429,611,1.622,616,1.622,627,3.493,687,3.305,688,1.429,690,1.701,691,1.429,693,1.622,737,2.036,738,1.622,739,1.916,740,1.916,741,1.916,742,1.916,743,1.916,744,1.916,745,1.916,746,1.916,747,1.916,748,1.916,749,1.916,750,1.916,751,1.916,752,3.775,753,1.916,754,1.916,755,3.038,756,4.983,757,1.916,758,4.296,759,1.916,760,1.916,761,1.916,762,1.916,763,1.916,764,3.038,765,3.038,766,3.038,767,3.038,768,1.916,769,1.916,770,1.916,771,1.916,772,1.916]],["title/entities/UsersModel.html",[180,1.643,624,2.091]],["body/entities/UsersModel.html",[3,0.221,4,0.195,5,0.195,11,0.525,18,0.899,21,0.026,22,1.216,23,0.807,27,1.503,31,1.86,36,0.372,39,1.119,40,2.358,42,1.612,43,0.221,44,0.015,57,0.015,58,0.015,99,2.012,118,2.879,120,2.497,153,2.329,180,1.982,190,1.801,210,1.982,247,3.942,280,3.135,281,2.771,289,4.476,334,3.942,452,2.951,515,3.907,528,3.942,624,1.756,625,1.929,627,3.607,629,3.5,634,2.437,635,4.476,636,3.5,642,2.437,643,3.5,645,4.095,646,4.476,650,2.437,652,2.437,653,3.5,660,2.437,661,3.5,665,3.5,666,3.5,671,2.146,672,2.437,773,2.437,774,5.599,775,2.878,776,2.878,777,2.878,778,2.878,779,2.878,780,2.878,781,2.878,782,4.134,783,2.878,784,2.878,785,4.134,786,4.134,787,2.437,788,2.878,789,2.878,790,2.878]],["title/modules/UsersModule.html",[59,1.332,73,1.919]],["body/modules/UsersModule.html",[3,0.285,4,0.252,5,0.252,21,0.025,36,0.495,38,0.512,43,0.285,44,0.013,57,0.018,58,0.018,59,2.15,61,1.778,62,1.917,63,2.262,64,2.262,65,1.917,66,3.096,67,3.096,71,3.259,73,3.818,74,3.004,75,2.262,76,2.076,78,3.301,112,2.546,175,3.024,196,3.373,225,1.778,251,1.917,300,3.53,457,1.917,683,3.139,690,3.53,737,3.706,791,3.139,792,3.708,793,3.139,794,3.139,795,3.708,796,3.708,797,3.672,798,3.708]],["title/coverage.html",[799,3.484]],["body/coverage.html",[0,0.567,1,1.504,5,0.182,6,2.274,7,1.8,8,1.8,9,2.285,10,3.05,21,0.025,23,0.341,40,1.753,41,2.074,44,0.022,57,0.014,58,0.014,65,1.388,93,1.8,110,2.404,111,1.8,113,2.274,124,1.8,136,1.388,138,1.8,139,2.003,162,1.638,163,1.638,172,2.274,175,1.198,180,1.885,206,1.504,208,2.003,209,2.931,221,1.504,222,2.003,229,1.388,253,0.977,276,5.186,277,1.504,278,2.003,279,2.931,300,1.504,301,2.003,302,3.117,313,1.8,322,2.003,324,1.504,325,2.003,336,2.003,337,2.274,338,2.274,381,1.638,382,1.8,383,2.931,413,2.274,430,2.003,461,2.003,484,2.003,494,2.274,504,2.003,505,2.274,534,2.274,540,2.003,541,2.274,542,2.274,552,1.8,553,2.003,554,2.274,573,1.638,581,2.003,582,1.504,583,2.003,624,2.398,626,3.328,681,2.003,687,1.638,688,2.003,690,1.504,691,2.003,716,2.274,726,2.274,737,1.8,738,2.274,773,3.328,797,2.003,799,2.003,800,2.274,801,2.686,802,2.686,803,4.65,804,4.65,805,2.686,806,6.335,807,2.686,808,2.274,809,5.878,810,2.686,811,2.274,812,3.931,813,6.25,814,3.931,815,3.931,816,2.686,817,2.686,818,2.274,819,2.274,820,2.274,821,2.274,822,3.937,823,3.931,824,3.931,825,2.274,826,2.686,827,2.686]],["title/dependencies.html",[62,2.13,828,2.427]],["body/dependencies.html",[21,0.026,38,0.597,39,1.679,44,0.02,57,0.02,58,0.02,62,2.232,87,3.22,96,2.634,145,2.232,170,2.418,219,2.894,355,2.894,420,4.435,421,2.894,499,3.656,520,3.656,685,3.22,686,3.22,787,3.656,829,5.948,830,4.318,831,4.318,832,4.318,833,4.318,834,4.318,835,4.318,836,4.318,837,4.318,838,3.656,839,4.318,840,4.318,841,4.318,842,4.318,843,4.318,844,4.318,845,4.318,846,4.318,847,4.318,848,4.318,849,4.318,850,4.318,851,4.318,852,4.318,853,4.318]],["title/miscellaneous/functions.html",[854,1.921,855,3.489]],["body/miscellaneous/functions.html",[11,0.677,21,0.022,57,0.022,58,0.022,65,3.369,821,4.513,854,3.573,855,4.513,856,5.331]],["title/index.html",[11,0.364,857,2.427,858,2.427]],["body/index.html",[4,0.27,17,1.774,21,0.025,29,0.745,57,0.019,58,0.019,213,3.205,799,2.966,859,3.978,860,3.978,861,5.157,862,3.978,863,3.978,864,3.978,865,3.978,866,3.978,867,3.978,868,5.723,869,3.978,870,3.978,871,3.978,872,6.543,873,3.978,874,3.368,875,3.978,876,6.428,877,3.978,878,3.978,879,5.157,880,3.978,881,3.978,882,3.978,883,3.978,884,5.157,885,5.157,886,3.978,887,3.978,888,3.978,889,4.367,890,5.157,891,3.978,892,3.978,893,3.978,894,3.978,895,3.978,896,3.368,897,3.978,898,3.978,899,3.978,900,3.978,901,3.978,902,3.978,903,3.978,904,3.978,905,3.978,906,3.978,907,3.368,908,3.978,909,3.978,910,3.978,911,3.978,912,3.978,913,3.978,914,2.666]],["title/license.html",[857,2.427,858,2.427,914,1.921]],["body/license.html",[21,0.019,57,0.019,58,0.019,76,2.241,200,2.441,355,2.682,476,3.388,524,4.383,602,2.984,717,4.383,800,3.388,889,3.388,914,2.682,915,5.739,916,4.001,917,4.001,918,4.001,919,5.177,920,4.001,921,4.001,922,4.001,923,4.001,924,4.001,925,4.001,926,5.177,927,6.71,928,4.001,929,4.001,930,4.001,931,5.739,932,4.001,933,4.001,934,4.001,935,4.001,936,4.001,937,4.001,938,4.001,939,4.001,940,4.001,941,4.001,942,5.177,943,4.001,944,4.001,945,4.001,946,4.001,947,4.001,948,4.001,949,4.001,950,5.177,951,5.177,952,4.001,953,4.001,954,4.001,955,4.001,956,4.001,957,4.001,958,4.001,959,4.001,960,4.001,961,4.001,962,4.001,963,4.001,964,4.001,965,4.001,966,4.001,967,4.001,968,4.001,969,4.001,970,4.001,971,4.001,972,4.001,973,4.001,974,4.001,975,4.001,976,4.001,977,4.001,978,4.001]],["title/modules.html",[61,2.24]],["body/modules.html",[21,0.021,57,0.021,58,0.021,60,3.35,61,2.396,70,3.049,71,2.584,72,3.049,73,2.799,896,5.559,979,6.565,980,6.565,981,6.705,982,4.998,983,4.998]],["title/overview.html",[984,3.955]],["body/overview.html",[1,2.983,2,0.966,21,0.025,57,0.017,58,0.017,59,1.339,60,4.416,61,1.652,62,1.781,63,2.102,64,2.102,65,1.781,66,1.929,67,1.929,68,2.917,69,2.917,70,4.088,71,3.093,72,4.16,73,3.777,74,2.86,75,2.102,76,1.929,112,1.781,136,3.264,158,2.917,160,2.917,161,2.917,162,3.25,163,3.25,175,2.816,207,1.652,221,2.983,229,2.755,300,2.983,324,2.983,582,2.983,605,2.569,614,2.917,625,2.309,675,2.917,676,2.917,690,2.983,791,2.917,793,2.917,794,2.917,984,2.917,985,3.445,986,3.445,987,3.445]],["title/properties.html",[210,1.976,828,2.427]],["body/properties.html",[21,0.025,29,0.987,57,0.022,58,0.022,210,2.526,907,4.461,914,3.532,988,5.269,989,5.269,990,5.269]],["title/miscellaneous/variables.html",[854,1.921,991,3.489]],["body/miscellaneous/variables.html",[9,1.609,11,0.367,13,1.546,21,0.026,23,0.741,27,1.049,37,2.16,41,1.287,50,1.722,51,1.472,52,1.506,57,0.015,58,0.015,84,1.933,153,2.015,156,1.272,190,1.649,248,3.505,253,1.506,313,2.775,322,3.087,347,2.151,359,2.442,421,1.933,427,2.151,429,2.442,444,3.087,484,3.087,515,4.027,516,5.087,625,1.933,671,2.151,681,3.087,797,3.087,808,3.505,811,2.442,818,2.442,819,2.442,820,3.505,822,2.442,825,4.1,838,3.505,854,1.933,874,3.505,991,2.442,992,4.842,993,2.884,994,2.884,995,2.884,996,2.884,997,5.291,998,4.14,999,2.884,1000,2.884,1001,4.14,1002,4.14,1003,2.884,1004,2.884,1005,2.884,1006,4.14,1007,2.884,1008,2.884,1009,2.884,1010,2.884,1011,2.884,1012,4.842,1013,4.842,1014,4.842,1015,4.842,1016,5.832,1017,2.884,1018,2.884,1019,2.884,1020,2.884,1021,2.884,1022,2.884,1023,2.884,1024,2.884,1025,2.884,1026,2.884,1027,2.884,1028,2.884,1029,2.884,1030,2.884,1031,2.884,1032,2.884,1033,4.14,1034,2.884,1035,2.884,1036,4.14,1037,2.884,1038,2.884,1039,2.884,1040,2.884,1041,2.884,1042,2.884,1043,2.884,1044,2.884,1045,2.884,1046,4.14,1047,2.884,1048,2.884,1049,2.884,1050,2.884]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateShortenedUrlsDto.html":{},"injectables/CreateShortenedUrlsService.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersService.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginDto.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"modules/ShortenedUrlsModule.html":{},"classes/UpdateShortenedUrlsDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":276,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"entities/ShortenedUrlsModel.html":{},"coverage.html":{}}}],["0.0.1",{"_index":989,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["0.3.19",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":603,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["1",{"_index":55,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["1.0.0",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":986,"title":{},"body":{"overview.html":{}}}],["2",{"_index":605,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{},"overview.html":{}}}],["200",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["2024",{"_index":602,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{},"license.html":{}}}],["20m",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["21t13:05:29.581z",{"_index":756,"title":{},"body":{"controllers/UsersController.html":{}}}],["21t14:41:43.707z",{"_index":764,"title":{},"body":{"controllers/UsersController.html":{}}}],["21t14:42:38.922z",{"_index":758,"title":{},"body":{"controllers/UsersController.html":{}}}],["21t14:52:35.867z",{"_index":608,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["21t14:56:35.867z",{"_index":604,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["255",{"_index":289,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/UsersModel.html":{}}}],["3",{"_index":614,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"overview.html":{}}}],["3.1.1",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["4.0.1",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["4/6",{"_index":817,"title":{},"body":{"coverage.html":{}}}],["409",{"_index":767,"title":{},"body":{"controllers/UsersController.html":{}}}],["5",{"_index":985,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":601,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["66",{"_index":816,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":292,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["8.0.3",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["8.11.3",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":987,"title":{},"body":{"overview.html":{}}}],["__deleteshortenedurlsservice",{"_index":590,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["__dirname",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_addclickcountshortenedurlsrepository",{"_index":25,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{}}}],["_addclickshortenedurlsservice",{"_index":436,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["_createshortenedurlsrepository",{"_index":231,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["_createshortenedurlsservice",{"_index":588,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["_createusersservicerepository",{"_index":305,"title":{},"body":{"injectables/CreateUsersService.html":{},"controllers/UsersController.html":{}}}],["_deleteshortenedurlsrepository",{"_index":329,"title":{},"body":{"injectables/DeleteShortenedUrlsService.html":{}}}],["_listshortenedurlsrepository",{"_index":437,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["_listshortenedurlsservice",{"_index":228,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{}}}],["_listusersservice",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUsersService.html":{},"injectables/UpdateUsersService.html":{}}}],["_listusersservicerepository",{"_index":467,"title":{},"body":{"injectables/ListUsersService.html":{},"controllers/UsersController.html":{}}}],["_updateshortenedurlsrepository",{"_index":709,"title":{},"body":{"injectables/UpdatetShortenedUrlsService.html":{}}}],["_updatetshortenedurlsservice",{"_index":589,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["_updateusersservicerepository",{"_index":693,"title":{},"body":{"injectables/UpdateUsersService.html":{},"controllers/UsersController.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":274,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["above",{"_index":949,"title":{},"body":{"license.html":{}}}],["access",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["action",{"_index":973,"title":{},"body":{"license.html":{}}}],["activated",{"_index":405,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["active",{"_index":280,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"entities/ShortenedUrlsModel.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{}}}],["add",{"_index":447,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{},"modules/ShortenedUrlsModule.html":{}}}],["addclickcount",{"_index":14,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{}}}],["addclickcount(shortenedurlid",{"_index":26,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{}}}],["addclickshortenedurlsservice",{"_index":1,"title":{"injectables/AddClickShortenedUrlsService.html":{}},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"modules/ShortenedUrlsModule.html":{},"coverage.html":{},"overview.html":{}}}],["addsecurity('token",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addsecurityrequirements('token",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["already",{"_index":487,"title":{},"body":{"injectables/ListUsersService.html":{},"controllers/UsersController.html":{}}}],["amazing",{"_index":897,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":940,"title":{},"body":{"license.html":{}}}],["api",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconflictresponse",{"_index":752,"title":{},"body":{"controllers/UsersController.html":{}}}],["apicreatedresponse",{"_index":584,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["apinocontentresponse",{"_index":585,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["apiokresponse",{"_index":586,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":216,"title":{},"body":{"classes/CreateShortenedUrlsDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["apiproperty({description",{"_index":212,"title":{},"body":{"classes/CreateShortenedUrlsDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["apiresponse",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('shortened",{"_index":587,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["apitags('users",{"_index":754,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":874,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":594,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["applications",{"_index":867,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":60,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argumentshost",{"_index":348,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"classes/ModelNotFoundException.html":{}}}],["arising",{"_index":976,"title":{},"body":{"license.html":{}}}],["associated",{"_index":928,"title":{},"body":{"license.html":{}}}],["async",{"_index":13,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"controllers/ShortenedUrlsController.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"miscellaneous/variables.html":{}}}],["attempt",{"_index":408,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":383,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:15",{"_index":390,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:26",{"_index":396,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["authcontroller",{"_index":111,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":400,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard",{"_index":404,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":385,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":493,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authlogin",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["authmodule",{"_index":70,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":907,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":728,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["authors",{"_index":966,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":136,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":983,"title":{},"body":{"modules.html":{}}}],["await",{"_index":52,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"controllers/ShortenedUrlsController.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":898,"title":{},"body":{"index.html":{}}}],["based",{"_index":309,"title":{},"body":{"injectables/CreateUsersService.html":{}}}],["bcrypt",{"_index":838,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bearer",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["before",{"_index":523,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["between",{"_index":291,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["body",{"_index":578,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":281,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}}}],["boolean'})@isoptional",{"_index":283,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["bootstrap",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShortenedUrlsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":981,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":979,"title":{},"body":{"modules.html":{}}}],["brunao@email.com",{"_index":763,"title":{},"body":{"controllers/UsersController.html":{}}}],["bruno",{"_index":917,"title":{},"body":{"license.html":{}}}],["bruno@email.com",{"_index":755,"title":{},"body":{"controllers/UsersController.html":{}}}],["bruno@mail.com",{"_index":297,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["bruno@mail.com'})@isnotempty()@isemail",{"_index":285,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["brunoupdate@email.com",{"_index":770,"title":{},"body":{"controllers/UsersController.html":{}}}],["build",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":862,"title":{},"body":{"index.html":{}}}],["c",{"_index":916,"title":{},"body":{"license.html":{}}}],["call",{"_index":511,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["callhandler",{"_index":509,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["calling",{"_index":406,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate",{"_index":386,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":388,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["catch",{"_index":340,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"classes/ModelNotFoundException.html":{},"injectables/UserMiddleware.html":{}}}],["catch(entitynotfounderror",{"_index":546,"title":{},"body":{"classes/ModelNotFoundException.html":{}}}],["catch(exception",{"_index":345,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"classes/ModelNotFoundException.html":{}}}],["catch(httpexception",{"_index":356,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{}}}],["caught",{"_index":351,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"classes/ModelNotFoundException.html":{}}}],["characters",{"_index":273,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"classes/CreateUserDto.html":{}}}],["charge",{"_index":923,"title":{},"body":{"license.html":{}}}],["check",{"_index":235,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{}}}],["checked",{"_index":475,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["checkifshortenedurlexistsfororiginalurl",{"_index":223,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["checkifshortenedurlexistsfororiginalurl(originalurl",{"_index":232,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["checkifshortenedurlexistsforuser",{"_index":224,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["checkifshortenedurlexistsforuser(originalurl",{"_index":238,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["checking",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["checks",{"_index":265,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/ListUsersService.html":{},"injectables/UserMiddleware.html":{}}}],["claim",{"_index":969,"title":{},"body":{"license.html":{}}}],["class",{"_index":44,"title":{"classes/CreateShortenedUrlsDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpAllExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/ModelNotFoundException.html":{},"classes/UpdateShortenedUrlsDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"injectables/AddClickShortenedUrlsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateShortenedUrlsDto.html":{},"injectables/CreateShortenedUrlsService.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersService.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginDto.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"modules/ShortenedUrlsModule.html":{},"classes/UpdateShortenedUrlsDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":207,"title":{},"body":{"classes/CreateShortenedUrlsDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpAllExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/ModelNotFoundException.html":{},"classes/UpdateShortenedUrlsDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["click",{"_index":7,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"modules/ShortenedUrlsModule.html":{},"coverage.html":{}}}],["click_count",{"_index":632,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["clickcount",{"_index":451,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{}}}],["cluster_appmodule",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_shortenedurlsmodule",{"_index":675,"title":{},"body":{"modules/ShortenedUrlsModule.html":{},"overview.html":{}}}],["cluster_shortenedurlsmodule_imports",{"_index":677,"title":{},"body":{"modules/ShortenedUrlsModule.html":{}}}],["cluster_shortenedurlsmodule_providers",{"_index":676,"title":{},"body":{"modules/ShortenedUrlsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":791,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":793,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":792,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":794,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["colpani",{"_index":918,"title":{},"body":{"license.html":{}}}],["column",{"_index":660,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}}}],["column('boolean",{"_index":629,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}}}],["column('character",{"_index":645,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}}}],["column('integer",{"_index":631,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["com",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["common/middlewares/user.middleware",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["compara",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compare(password",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comparepassword",{"_index":484,"title":{},"body":{"injectables/ListUsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparepassword(password",{"_index":491,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["conditions",{"_index":948,"title":{},"body":{"license.html":{}}}],["config",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configservice",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_host",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_name",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_password",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_port",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_schema",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_user",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configure",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["conflict",{"_index":765,"title":{},"body":{"controllers/UsersController.html":{}}}],["conflictexception",{"_index":483,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["connection",{"_index":977,"title":{},"body":{"license.html":{}}}],["const",{"_index":51,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"controllers/ShortenedUrlsController.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{}}}],["constructor(_addclickcountshortenedurlsrepository",{"_index":16,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{}}}],["constructor(_createshortenedurlsrepository",{"_index":227,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["constructor(_createusersservicerepository",{"_index":303,"title":{},"body":{"injectables/CreateUsersService.html":{}}}],["constructor(_deleteshortenedurlsrepository",{"_index":327,"title":{},"body":{"injectables/DeleteShortenedUrlsService.html":{}}}],["constructor(_listshortenedurlsrepository",{"_index":435,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["constructor(_listusersservice",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(_listusersservicerepository",{"_index":465,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["constructor(_updateshortenedurlsrepository",{"_index":708,"title":{},"body":{"injectables/UpdatetShortenedUrlsService.html":{}}}],["constructor(_updateusersservicerepository",{"_index":692,"title":{},"body":{"injectables/UpdateUsersService.html":{}}}],["constructor(authservice",{"_index":495,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(jwtservice",{"_index":718,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["constructor(logger",{"_index":341,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{}}}],["constructor(private",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"injectables/UserMiddleware.html":{}}}],["consumer",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(usermiddleware).forroutes",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["containing",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"classes/HttpAllExceptionFilter.html":{},"classes/ModelNotFoundException.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{}}}],["content",{"_index":559,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["context",{"_index":391,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LoggingInterceptor.html":{}}}],["contract",{"_index":974,"title":{},"body":{"license.html":{}}}],["controller",{"_index":110,"title":{"controllers/AuthController.html":{},"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":753,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ShortenedUrlsController.html":{},"modules/ShortenedUrlsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["copies",{"_index":942,"title":{},"body":{"license.html":{}}}],["copy",{"_index":926,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":915,"title":{},"body":{"license.html":{}}}],["correspondente",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["count",{"_index":8,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"modules/ShortenedUrlsModule.html":{},"coverage.html":{}}}],["coverage",{"_index":799,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":225,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"controllers/ShortenedUrlsController.html":{},"modules/ShortenedUrlsModule.html":{},"classes/UpdateShortenedUrlsDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["create(@body",{"_index":768,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createshortenedurlsdto",{"_index":241,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["create(createuserdto",{"_index":306,"title":{},"body":{"injectables/CreateUsersService.html":{},"controllers/UsersController.html":{}}}],["created",{"_index":311,"title":{},"body":{"injectables/CreateUsersService.html":{}}}],["created_at",{"_index":636,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}}}],["createdat",{"_index":627,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{}}}],["createdatecolumn",{"_index":661,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}}}],["createdatecolumn({type",{"_index":634,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}}}],["creates",{"_index":308,"title":{},"body":{"injectables/CreateUsersService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/UserMiddleware.html":{}}}],["createshortenedurlsdto",{"_index":206,"title":{"classes/CreateShortenedUrlsDto.html":{}},"body":{"classes/CreateShortenedUrlsDto.html":{},"injectables/CreateShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{},"classes/UpdateShortenedUrlsDto.html":{},"coverage.html":{}}}],["createshortenedurlsdto.originalurl",{"_index":256,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["createshortenedurlsservice",{"_index":221,"title":{"injectables/CreateShortenedUrlsService.html":{}},"body":{"injectables/CreateShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{},"modules/ShortenedUrlsModule.html":{},"coverage.html":{},"overview.html":{}}}],["createuserdto",{"_index":277,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"injectables/CreateUsersService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["createusersservice",{"_index":300,"title":{"injectables/CreateUsersService.html":{}},"body":{"injectables/CreateUsersService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["creating",{"_index":244,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["credentials",{"_index":479,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["ctx",{"_index":365,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/ModelNotFoundException.html":{}}}],["ctx.getrequest",{"_index":368,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":367,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"classes/ModelNotFoundException.html":{}}}],["custom",{"_index":547,"title":{},"body":{"classes/ModelNotFoundException.html":{}}}],["damages",{"_index":970,"title":{},"body":{"license.html":{}}}],["data",{"_index":310,"title":{},"body":{"injectables/CreateUsersService.html":{},"injectables/UpdateUsersService.html":{}}}],["data_source",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database/database.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["databasemodule",{"_index":71,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/ShortenedUrlsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":322,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasource",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getrepository(shortenedurlsmodel",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getrepository(usersmodel",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.initialize",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":334,"title":{},"body":{"injectables/DeleteShortenedUrlsService.html":{},"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}}}],["date().toisostring",{"_index":379,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{}}}],["date.now",{"_index":529,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["de",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deal",{"_index":930,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":978,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShortenedUrlsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decodes",{"_index":730,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["decoding",{"_index":721,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["decorators",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateShortenedUrlsDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{}}}],["default",{"_index":515,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":18,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateShortenedUrlsDto.html":{},"injectables/CreateShortenedUrlsService.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginDto.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{}}}],["delete",{"_index":566,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"modules/ShortenedUrlsModule.html":{}}}],["delete(':id",{"_index":621,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["deleted_at",{"_index":639,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["deletedat",{"_index":628,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["deletedatecolumn",{"_index":662,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["deletedatecolumn({type",{"_index":638,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["deleteshortenedurlsservice",{"_index":324,"title":{"injectables/DeleteShortenedUrlsService.html":{}},"body":{"injectables/DeleteShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{},"modules/ShortenedUrlsModule.html":{},"coverage.html":{},"overview.html":{}}}],["dependencies",{"_index":62,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShortenedUrlsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":29,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateShortenedUrlsDto.html":{},"injectables/CreateShortenedUrlsService.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginDto.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":35,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/CreateShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/UpdatetShortenedUrlsService.html":{}}}],["development",{"_index":875,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":938,"title":{},"body":{"license.html":{}}}],["document",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":800,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documentbuilder",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/UpdatetShortenedUrlsService.html":{}}}],["dto/create",{"_index":249,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{}}}],["dto/update",{"_index":696,"title":{},"body":{"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{}}}],["during",{"_index":399,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["e2e",{"_index":886,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":863,"title":{},"body":{"index.html":{}}}],["email",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{}}}],["email@mail.com",{"_index":539,"title":{},"body":{"classes/LoginDto.html":{}}}],["email@mail.com'})@isnotempty()@isemail",{"_index":535,"title":{},"body":{"classes/LoginDto.html":{}}}],["entities",{"_index":625,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":624,"title":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}},"body":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{},"coverage.html":{}}}],["entity('shortened_urls",{"_index":670,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["entity('users",{"_index":790,"title":{},"body":{"entities/UsersModel.html":{}}}],["entity.js",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entitynotfounderror",{"_index":543,"title":{},"body":{"classes/ModelNotFoundException.html":{}}}],["env",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["envfilepath",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["err",{"_index":397,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":362,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"classes/ModelNotFoundException.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{}}}],["errorlist",{"_index":380,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"controllers/UsersController.html":{}}}],["errors",{"_index":549,"title":{},"body":{"classes/ModelNotFoundException.html":{}}}],["event",{"_index":965,"title":{},"body":{"license.html":{}}}],["example",{"_index":213,"title":{},"body":{"classes/CreateShortenedUrlsDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["exception",{"_index":350,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"classes/ModelNotFoundException.html":{}}}],["exception.filter.ts",{"_index":338,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:12",{"_index":342,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{}}}],["exception.filter.ts:26",{"_index":349,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{}}}],["exception.getresponse",{"_index":372,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{}}}],["exception.getstatus",{"_index":370,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{}}}],["exception.message",{"_index":551,"title":{},"body":{"classes/ModelNotFoundException.html":{}}}],["exceptionfilter",{"_index":339,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"classes/ModelNotFoundException.html":{}}}],["exceptions",{"_index":360,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"classes/ModelNotFoundException.html":{}}}],["exclude",{"_index":786,"title":{},"body":{"entities/UsersModel.html":{}}}],["exclude()@column('character",{"_index":779,"title":{},"body":{"entities/UsersModel.html":{}}}],["execution",{"_index":392,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LoggingInterceptor.html":{}}}],["executioncontext",{"_index":389,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LoggingInterceptor.html":{}}}],["existing",{"_index":236,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"injectables/UpdateUsersService.html":{}}}],["existingurl",{"_index":268,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["existingurlexists",{"_index":254,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["exists",{"_index":266,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"injectables/ListUsersService.html":{}}}],["expiresin",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["export",{"_index":43,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateShortenedUrlsDto.html":{},"injectables/CreateShortenedUrlsService.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersService.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginDto.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"modules/ShortenedUrlsModule.html":{},"classes/UpdateShortenedUrlsDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{},"modules/UsersModule.html":{}}}],["exports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ShortenedUrlsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":355,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"classes/ModelNotFoundException.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":384,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateShortenedUrlsDto.html":{},"classes/UpdateUserDto.html":{}}}],["extracted",{"_index":401,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["extractjwt",{"_index":418,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":425,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjlbwfpbci6imdhynjpzwwxqgvtywlslmnvbsisinvzzxjoyw1lijoir2ficmllbcisimlkijoxlcjpyxqioje2odkynze4ntgsimv4cci6mty4oti3mza1oh0.zjn2s2lf1ryfrxm2cnywauv3hsrrjkac8f1rp3ydags",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["fails",{"_index":411,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["false",{"_index":427,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ListUsersService.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateShortenedUrlsDto.html":{},"injectables/CreateShortenedUrlsService.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersService.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginDto.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"modules/ShortenedUrlsModule.html":{},"classes/UpdateShortenedUrlsDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["files",{"_index":929,"title":{},"body":{"license.html":{}}}],["find",{"_index":448,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["findall",{"_index":462,"title":{},"body":{"injectables/ListUsersService.html":{},"controllers/UsersController.html":{}}}],["findbyoriginalurl",{"_index":431,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["findbyoriginalurl(originalurl",{"_index":438,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["findbyoriginalurlanduserid",{"_index":432,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["findbyoriginalurlanduserid(originalurl",{"_index":440,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["findbyuserid",{"_index":433,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{}}}],["findbyuserid(@param('userid",{"_index":609,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["findbyuserid(userid",{"_index":442,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{}}}],["findone",{"_index":463,"title":{},"body":{"injectables/ListUsersService.html":{},"controllers/UsersController.html":{}}}],["findone(@param('id",{"_index":761,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":470,"title":{},"body":{"injectables/ListUsersService.html":{},"controllers/UsersController.html":{}}}],["fitness",{"_index":961,"title":{},"body":{"license.html":{}}}],["following",{"_index":947,"title":{},"body":{"license.html":{}}}],["found",{"_index":237,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"classes/ModelNotFoundException.html":{},"injectables/UpdateUsersService.html":{}}}],["found.exception.filter.ts",{"_index":542,"title":{},"body":{"classes/ModelNotFoundException.html":{},"coverage.html":{}}}],["found.exception.filter.ts:17",{"_index":544,"title":{},"body":{"classes/ModelNotFoundException.html":{}}}],["framework",{"_index":861,"title":{},"body":{"index.html":{}}}],["free",{"_index":922,"title":{},"body":{"license.html":{}}}],["function",{"_index":726,"title":{},"body":{"injectables/UserMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":855,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":945,"title":{},"body":{"license.html":{}}}],["gabriel@email.com",{"_index":757,"title":{},"body":{"controllers/UsersController.html":{}}}],["generate",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{}}}],["generated",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{}}}],["generatehash",{"_index":313,"title":{},"body":{"injectables/CreateUsersService.html":{},"injectables/UpdateUsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generatehash(createuserdto.password",{"_index":318,"title":{},"body":{"injectables/CreateUsersService.html":{}}}],["generatehash(updateuserdto.password",{"_index":705,"title":{},"body":{"injectables/UpdateUsersService.html":{}}}],["generaterandomhash",{"_index":226,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["generaterandomhash(length",{"_index":245,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["generates",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["gera",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get(':id",{"_index":760,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':shorturl",{"_index":592,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["get('user",{"_index":598,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["getting",{"_index":857,"title":{"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":267,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"injectables/ListUsersService.html":{}}}],["granted",{"_index":921,"title":{},"body":{"license.html":{}}}],["graph",{"_index":982,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":893,"title":{},"body":{"index.html":{}}}],["handle",{"_index":530,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["handler",{"_index":512,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["handlerequest",{"_index":387,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":395,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handles",{"_index":358,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"classes/ModelNotFoundException.html":{}}}],["hash",{"_index":248,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"miscellaneous/variables.html":{}}}],["hash(password",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashedpassword",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":729,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["here",{"_index":904,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":920,"title":{},"body":{"license.html":{}}}],["holders",{"_index":967,"title":{},"body":{"license.html":{}}}],["host",{"_index":347,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"classes/ModelNotFoundException.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":366,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"classes/ModelNotFoundException.html":{}}}],["http",{"_index":359,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:8080/avwab8",{"_index":600,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["http://localhost:8080/avx4b8",{"_index":607,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["httpallexceptionfilter",{"_index":336,"title":{"classes/HttpAllExceptionFilter.html":{}},"body":{"classes/HttpAllExceptionFilter.html":{},"coverage.html":{}}}],["httpcode",{"_index":580,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["httpcode(httpstatus.created",{"_index":611,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["httpcode(httpstatus.created)@post()@apioperation({summary",{"_index":569,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":620,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["httpcode(httpstatus.ok",{"_index":591,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["httpcode(httpstatus.ok)@get(':shorturl')@apioperation({summary",{"_index":561,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["httpcode(httpstatus.ok)@useguards(jwtauthguard)@get('user",{"_index":556,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["httpexception",{"_index":346,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{}}}],["https://nestjs.com",{"_index":911,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":354,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["httpstatus.internal_server_error",{"_index":371,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{}}}],["husky",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["i.shorturl",{"_index":454,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["id",{"_index":31,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{}}}],["id'})@apiconflictresponse({description",{"_index":748,"title":{},"body":{"controllers/UsersController.html":{}}}],["id'})@apiokresponse({description",{"_index":575,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["id'})@apioperation({summary",{"_index":565,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["identifier",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":426,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/ModelNotFoundException.html":{},"injectables/UserMiddleware.html":{}}}],["implied",{"_index":957,"title":{},"body":{"license.html":{}}}],["import",{"_index":36,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateShortenedUrlsDto.html":{},"injectables/CreateShortenedUrlsService.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersService.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginDto.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"modules/ShortenedUrlsModule.html":{},"classes/UpdateShortenedUrlsDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{},"modules/UsersModule.html":{}}}],["imports",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShortenedUrlsModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":952,"title":{},"body":{"license.html":{}}}],["including",{"_index":524,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"license.html":{}}}],["increment",{"_index":48,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"injectables/AddClickShortenedUrlsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateShortenedUrlsDto.html":{},"injectables/CreateShortenedUrlsService.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginDto.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index('shortened_urls_pkey",{"_index":668,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["index('shortened_urls_short_url_key",{"_index":669,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["index('users_pkey",{"_index":789,"title":{},"body":{"entities/UsersModel.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateShortenedUrlsDto.html":{},"injectables/CreateShortenedUrlsService.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersService.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginDto.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"modules/ShortenedUrlsModule.html":{},"classes/UpdateShortenedUrlsDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{},"modules/UsersModule.html":{}}}],["inject",{"_index":37,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"miscellaneous/variables.html":{}}}],["inject('shortenedurls_repository",{"_index":45,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/UpdatetShortenedUrlsService.html":{}}}],["inject('users_repository",{"_index":315,"title":{},"body":{"injectables/CreateUsersService.html":{},"injectables/ListUsersService.html":{},"injectables/UpdateUsersService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{}},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"overview.html":{}}}],["installation",{"_index":871,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":873,"title":{},"body":{"index.html":{}}}],["instance",{"_index":344,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"injectables/UserMiddleware.html":{}}}],["instanceof",{"_index":369,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{}}}],["integer",{"_index":643,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}}}],["intercept",{"_index":506,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept(ctx",{"_index":507,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["isboolean",{"_index":294,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isboolean({message",{"_index":282,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":295,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isemailregistered",{"_index":464,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["isemailregistered(email",{"_index":473,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["isglobal",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["ismatch",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isnotempty",{"_index":217,"title":{},"body":{"classes/CreateShortenedUrlsDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isoptional",{"_index":296,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":218,"title":{},"body":{"classes/CreateShortenedUrlsDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["join",{"_index":900,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":663,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["json.stringify(message",{"_index":374,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{}}}],["jwt",{"_index":421,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserMiddleware.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":381,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":424,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtservice",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserMiddleware.html":{}}}],["jwtstrategy",{"_index":162,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":908,"title":{},"body":{"index.html":{}}}],["kind",{"_index":956,"title":{},"body":{"license.html":{}}}],["legend",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShortenedUrlsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":247,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"classes/CreateUserDto.html":{},"entities/UsersModel.html":{}}}],["length(8",{"_index":299,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["liability",{"_index":971,"title":{},"body":{"license.html":{}}}],["liable",{"_index":968,"title":{},"body":{"license.html":{}}}],["license",{"_index":914,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":890,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":933,"title":{},"body":{"license.html":{}}}],["limited",{"_index":958,"title":{},"body":{"license.html":{}}}],["list",{"_index":251,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"modules/ShortenedUrlsModule.html":{},"injectables/UpdateUsersService.html":{},"modules/UsersModule.html":{}}}],["listshortenedurlsservice",{"_index":229,"title":{"injectables/ListShortenedUrlsService.html":{}},"body":{"injectables/CreateShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{},"modules/ShortenedUrlsModule.html":{},"coverage.html":{},"overview.html":{}}}],["listusersservice",{"_index":175,"title":{"injectables/ListUsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CreateUsersService.html":{},"injectables/ListUsersService.html":{},"injectables/UpdateUsersService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["local",{"_index":499,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":138,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":163,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logged",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger",{"_index":343,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{}}}],["logger(httpallexceptionfilter.name",{"_index":357,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{}}}],["logger(logginginterceptor.name",{"_index":517,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["logginginterceptor",{"_index":504,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["login",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{}}}],["login(@request",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":124,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logs",{"_index":361,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{}}}],["manytoone",{"_index":664,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["manytoone(undefined",{"_index":655,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["matches",{"_index":472,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["matching",{"_index":58,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateShortenedUrlsDto.html":{},"injectables/CreateShortenedUrlsService.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersService.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginDto.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"modules/ShortenedUrlsModule.html":{},"classes/UpdateShortenedUrlsDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":960,"title":{},"body":{"license.html":{}}}],["merge",{"_index":936,"title":{},"body":{"license.html":{}}}],["message",{"_index":290,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/HttpAllExceptionFilter.html":{},"classes/ModelNotFoundException.html":{},"controllers/UsersController.html":{}}}],["metadata",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":394,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["methods",{"_index":12,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{}}}],["middlewareconsumer",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":854,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":889,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":879,"title":{},"body":{"index.html":{}}}],["model",{"_index":548,"title":{},"body":{"classes/ModelNotFoundException.html":{}}}],["modelnotfoundexception",{"_index":540,"title":{"classes/ModelNotFoundException.html":{}},"body":{"classes/ModelNotFoundException.html":{},"coverage.html":{}}}],["modify",{"_index":935,"title":{},"body":{"license.html":{}}}],["module",{"_index":59,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ShortenedUrlsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ShortenedUrlsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":61,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ShortenedUrlsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":903,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":909,"title":{},"body":{"index.html":{}}}],["name",{"_index":22,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{}}}],["nest",{"_index":868,"title":{},"body":{"index.html":{}}}],["nestexpressapplication",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestframework",{"_index":913,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":519,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nestjs/common",{"_index":38,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"modules/ShortenedUrlsModule.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UserMiddleware.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":685,"title":{},"body":{"classes/UpdateShortenedUrlsDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateShortenedUrlsDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":727,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["nestmodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":253,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newurl",{"_index":262,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["next",{"_index":508,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/UserMiddleware.html":{}}}],["node.js",{"_index":860,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":964,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":697,"title":{},"body":{"injectables/UpdateUsersService.html":{}}}],["notice",{"_index":950,"title":{},"body":{"license.html":{}}}],["now",{"_index":528,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}}}],["now}ms",{"_index":533,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["null",{"_index":242,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"entities/ShortenedUrlsModel.html":{},"injectables/UserMiddleware.html":{}}}],["nullable",{"_index":640,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["number",{"_index":27,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{},"miscellaneous/variables.html":{}}}],["o",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUsersService.html":{},"injectables/JwtAuthGuard.html":{},"classes/ModelNotFoundException.html":{},"injectables/UpdateUsersService.html":{},"injectables/UserMiddleware.html":{}}}],["objects",{"_index":353,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{}}}],["observable",{"_index":513,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["obtaining",{"_index":925,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":398,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["olduser",{"_index":698,"title":{},"body":{"injectables/UpdateUsersService.html":{}}}],["olduser.email",{"_index":700,"title":{},"body":{"injectables/UpdateUsersService.html":{}}}],["olduser.password",{"_index":703,"title":{},"body":{"injectables/UpdateUsersService.html":{}}}],["onetomany",{"_index":785,"title":{},"body":{"entities/UsersModel.html":{}}}],["onetomany(undefined",{"_index":781,"title":{},"body":{"entities/UsersModel.html":{}}}],["open",{"_index":891,"title":{},"body":{"index.html":{}}}],["optional",{"_index":24,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{}}}],["original",{"_index":234,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{}}}],["original_url",{"_index":647,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["originalurl",{"_index":211,"title":{},"body":{"classes/CreateShortenedUrlsDto.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{}}}],["otherwise",{"_index":476,"title":{},"body":{"injectables/ListUsersService.html":{},"license.html":{}}}],["out",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShortenedUrlsModule.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":984,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":828,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":49,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LoggingInterceptor.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":617,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{}}}],["parent",{"_index":393,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["partialtype",{"_index":684,"title":{},"body":{"classes/UpdateShortenedUrlsDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":689,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["particular",{"_index":962,"title":{},"body":{"license.html":{}}}],["passowrdhash",{"_index":317,"title":{},"body":{"injectables/CreateUsersService.html":{},"injectables/UpdateUsersService.html":{}}}],["passport",{"_index":420,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":422,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":414,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":502,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["password",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/UpdateUsersService.html":{},"entities/UsersModel.html":{},"miscellaneous/variables.html":{}}}],["password'})@apibody({description",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["password'})@isnotempty()@isstring",{"_index":537,"title":{},"body":{"classes/LoginDto.html":{}}}],["passwordfield",{"_index":501,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["path",{"_index":376,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"controllers/UsersController.html":{}}}],["payload",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserMiddleware.html":{}}}],["payload.id",{"_index":736,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["permission",{"_index":919,"title":{},"body":{"license.html":{}}}],["permit",{"_index":943,"title":{},"body":{"license.html":{}}}],["person",{"_index":924,"title":{},"body":{"license.html":{}}}],["persons",{"_index":944,"title":{},"body":{"license.html":{}}}],["pg",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["pipe(tap",{"_index":531,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["please",{"_index":901,"title":{},"body":{"index.html":{}}}],["port",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":954,"title":{},"body":{"license.html":{}}}],["post",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@httpcode(httpstatus.created)@apioperation({summary",{"_index":739,"title":{},"body":{"controllers/UsersController.html":{}}}],["postgres",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["primarygeneratedcolumn",{"_index":665,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}}}],["primarygeneratedcolumn({type",{"_index":642,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}}}],["private",{"_index":46,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LoggingInterceptor.html":{},"controllers/ShortenedUrlsController.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"controllers/UsersController.html":{}}}],["process.env.api_domain}:${process.env.app_port}/${existingurlexists.shorturl",{"_index":258,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["process.env.api_domain}:${process.env.app_port}/${hash",{"_index":261,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["process.env.api_domain}:${process.env.app_port}/${i.shorturl",{"_index":455,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["process.env.database_schema",{"_index":672,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}}}],["process.env.jwt_secret",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["production",{"_index":881,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":859,"title":{},"body":{"index.html":{}}}],["project",{"_index":892,"title":{},"body":{"index.html":{}}}],["promise",{"_index":50,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":210,"title":{"properties.html":{}},"body":{"classes/CreateShortenedUrlsDto.html":{},"classes/CreateUserDto.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginDto.html":{},"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{},"properties.html":{}}}],["provide",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUsersService.html":{},"injectables/ListUsersService.html":{},"injectables/UpdateUsersService.html":{},"license.html":{}}}],["providers",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ShortenedUrlsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["publish",{"_index":937,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":963,"title":{},"body":{"license.html":{}}}],["put",{"_index":579,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["put(':id",{"_index":616,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["q1w2e3r4t5y6",{"_index":298,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["q1w2e3r4t5y6'})@isnotempty()@isstring({message",{"_index":287,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["random",{"_index":271,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["read",{"_index":902,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":47,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/AuthService.html":{},"classes/CreateShortenedUrlsDto.html":{},"injectables/CreateShortenedUrlsService.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"controllers/ShortenedUrlsController.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{}}}],["redirect",{"_index":434,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{}}}],["redirect(@param('shorturl",{"_index":595,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["redirect(shorturl",{"_index":445,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{}}}],["redirection",{"_index":593,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["redirection'})@apiokresponse({description",{"_index":562,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["referencedcolumnname",{"_index":674,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["reflect",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":488,"title":{},"body":{"injectables/ListUsersService.html":{},"controllers/UsersController.html":{}}}],["remove",{"_index":326,"title":{},"body":{"injectables/DeleteShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{}}}],["remove(@param('id",{"_index":622,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["remove(id",{"_index":330,"title":{},"body":{"injectables/DeleteShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{}}}],["repository",{"_index":17,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"index.html":{}}}],["req",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"controllers/ShortenedUrlsController.html":{},"injectables/UserMiddleware.html":{}}}],["req.headers.authorization",{"_index":732,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["req.headers.authorization.split",{"_index":733,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["req.user.userid",{"_index":619,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["req.userid",{"_index":613,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"injectables/UserMiddleware.html":{}}}],["request",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LoggingInterceptor.html":{},"controllers/ShortenedUrlsController.html":{},"injectables/UserMiddleware.html":{}}}],["request.url",{"_index":377,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{}}}],["required",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["res",{"_index":724,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["reset",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShortenedUrlsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolves",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUsersService.html":{},"injectables/ListUsersService.html":{},"injectables/UpdateUsersService.html":{}}}],["response",{"_index":352,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"classes/ModelNotFoundException.html":{},"injectables/UserMiddleware.html":{}}}],["response.status(httpstatus.not_found).json",{"_index":550,"title":{},"body":{"classes/ModelNotFoundException.html":{}}}],["response.status(status).json",{"_index":375,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{}}}],["rest",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restriction",{"_index":932,"title":{},"body":{"license.html":{}}}],["result",{"_index":275,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"injectables/JwtAuthGuard.html":{}}}],["results",{"_index":57,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateShortenedUrlsDto.html":{},"injectables/CreateShortenedUrlsService.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersService.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginDto.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"modules/ShortenedUrlsModule.html":{},"classes/UpdateShortenedUrlsDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":33,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{}}}],["rights",{"_index":934,"title":{},"body":{"license.html":{}}}],["run",{"_index":876,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":520,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":522,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["salt_rounds",{"_index":825,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["scalable",{"_index":864,"title":{},"body":{"index.html":{}}}],["schema",{"_index":671,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{},"miscellaneous/variables.html":{}}}],["scheme",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["secretorkey",{"_index":428,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":450,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["sell",{"_index":941,"title":{},"body":{"license.html":{}}}],["sends",{"_index":363,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"classes/ModelNotFoundException.html":{}}}],["senha",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":865,"title":{},"body":{"index.html":{}}}],["service",{"_index":720,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["services/auth/auth.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["services/shortenedurls/shortened",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["services/users/users.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["setdescription('example",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sets",{"_index":731,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["settitle('rest",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setversion('1.0",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seu",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":951,"title":{},"body":{"license.html":{}}}],["short_url",{"_index":649,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["shortened",{"_index":9,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"classes/CreateShortenedUrlsDto.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{},"modules/ShortenedUrlsModule.html":{},"classes/UpdateShortenedUrlsDto.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shortenedurlid",{"_index":30,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{}}}],["shortenedurls",{"_index":774,"title":{},"body":{"entities/UsersModel.html":{}}}],["shortenedurls.user",{"_index":782,"title":{},"body":{"entities/UsersModel.html":{}}}],["shortenedurls/shortened",{"_index":788,"title":{},"body":{"entities/UsersModel.html":{}}}],["shortenedurls_repository",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shortenedurlscontroller",{"_index":552,"title":{"controllers/ShortenedUrlsController.html":{}},"body":{"controllers/ShortenedUrlsController.html":{},"modules/ShortenedUrlsModule.html":{},"coverage.html":{}}}],["shortenedurlsmodel",{"_index":40,"title":{"entities/ShortenedUrlsModel.html":{}},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"entities/ShortenedUrlsModel.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"entities/UsersModel.html":{},"coverage.html":{}}}],["shortenedurlsmodule",{"_index":72,"title":{"modules/ShortenedUrlsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ShortenedUrlsModule.html":{},"modules.html":{},"overview.html":{}}}],["shortenedurlsproviders",{"_index":681,"title":{},"body":{"modules/ShortenedUrlsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shortenurl",{"_index":555,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["shortenurl(createshortenedurlsdto",{"_index":568,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["shorturl",{"_index":260,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{}}}],["side",{"_index":866,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["software",{"_index":927,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateShortenedUrlsDto.html":{},"injectables/CreateShortenedUrlsService.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersService.html":{},"modules/DatabaseModule.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginDto.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"modules/ShortenedUrlsModule.html":{},"classes/UpdateShortenedUrlsDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["specified",{"_index":272,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["sponsors",{"_index":895,"title":{},"body":{"index.html":{}}}],["src/.../database.providers.ts",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":856,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../password.utils.ts",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shortened",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.ts",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.provider.ts",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:27",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/filters/http",{"_index":337,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"coverage.html":{}}}],["src/common/filters/model",{"_index":541,"title":{},"body":{"classes/ModelNotFoundException.html":{},"coverage.html":{}}}],["src/common/interceptors/logging.interceptor.ts",{"_index":505,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/logging.interceptor.ts:13",{"_index":518,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/common/interceptors/logging.interceptor.ts:21",{"_index":510,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/common/middlewares/user.middleware.ts",{"_index":716,"title":{},"body":{"injectables/UserMiddleware.html":{},"coverage.html":{}}}],["src/common/middlewares/user.middleware.ts:18",{"_index":725,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["src/common/middlewares/user.middleware.ts:5",{"_index":719,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["src/controllers/auth/auth.controller",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/controllers/auth/auth.controller.ts",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/controllers/auth/auth.controller.ts:25",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/controllers/shortenedurls/shortened",{"_index":553,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"modules/ShortenedUrlsModule.html":{},"coverage.html":{}}}],["src/controllers/users/users.controller",{"_index":796,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/controllers/users/users.controller.ts",{"_index":738,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/controllers/users/users.controller.ts:121",{"_index":742,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/controllers/users/users.controller.ts:159",{"_index":751,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/controllers/users/users.controller.ts:62",{"_index":745,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/controllers/users/users.controller.ts:84",{"_index":747,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/database.providers",{"_index":323,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database.providers.ts",{"_index":818,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.module",{"_index":683,"title":{},"body":{"modules/ShortenedUrlsModule.html":{},"modules/UsersModule.html":{}}}],["src/database/database.module.ts",{"_index":321,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/docs/swagger.ts",{"_index":819,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/entities/shortenedurls/shortened",{"_index":41,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"entities/ShortenedUrlsModel.html":{},"modules/ShortenedUrlsModule.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/entities/users/user.entity",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUsersService.html":{},"injectables/ListUsersService.html":{},"injectables/UpdateUsersService.html":{}}}],["src/entities/users/user.entity.ts",{"_index":773,"title":{},"body":{"entities/UsersModel.html":{},"coverage.html":{}}}],["src/entities/users/user.entity.ts:17",{"_index":778,"title":{},"body":{"entities/UsersModel.html":{}}}],["src/entities/users/user.entity.ts:20",{"_index":777,"title":{},"body":{"entities/UsersModel.html":{}}}],["src/entities/users/user.entity.ts:24",{"_index":780,"title":{},"body":{"entities/UsersModel.html":{}}}],["src/entities/users/user.entity.ts:27",{"_index":775,"title":{},"body":{"entities/UsersModel.html":{}}}],["src/entities/users/user.entity.ts:34",{"_index":776,"title":{},"body":{"entities/UsersModel.html":{}}}],["src/entities/users/user.entity.ts:41",{"_index":784,"title":{},"body":{"entities/UsersModel.html":{}}}],["src/entities/users/user.entity.ts:44",{"_index":783,"title":{},"body":{"entities/UsersModel.html":{}}}],["src/entities/users/user.provider",{"_index":798,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/entities/users/user.provider.ts",{"_index":811,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":821,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/services/auth/auth.module.ts",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/services/auth/auth.service",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/services/auth/auth.service.ts",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/services/auth/auth.service.ts:19",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth/auth.service.ts:28",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth/auth.service.ts:7",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth/dto/login.dto",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/services/auth/dto/login.dto.ts",{"_index":534,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/services/auth/dto/login.dto.ts:13",{"_index":538,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/services/auth/dto/login.dto.ts:8",{"_index":536,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/services/auth/guards/jwt",{"_index":382,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/services/auth/guards/local",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/services/auth/strategies/jwt.strategy.ts",{"_index":413,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/services/auth/strategies/jwt.strategy.ts:15",{"_index":417,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/services/auth/strategies/jwt.strategy.ts:6",{"_index":415,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/services/auth/strategies/local.strategy.ts",{"_index":494,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/services/auth/strategies/local.strategy.ts:16",{"_index":498,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/services/auth/strategies/local.strategy.ts:7",{"_index":496,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/services/shortenedurls/add",{"_index":6,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"coverage.html":{}}}],["src/services/shortenedurls/create",{"_index":222,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{},"coverage.html":{}}}],["src/services/shortenedurls/delete",{"_index":325,"title":{},"body":{"injectables/DeleteShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{},"coverage.html":{}}}],["src/services/shortenedurls/dto/create",{"_index":208,"title":{},"body":{"classes/CreateShortenedUrlsDto.html":{},"controllers/ShortenedUrlsController.html":{},"coverage.html":{}}}],["src/services/shortenedurls/dto/update",{"_index":581,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"classes/UpdateShortenedUrlsDto.html":{},"coverage.html":{}}}],["src/services/shortenedurls/list",{"_index":430,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{},"coverage.html":{}}}],["src/services/shortenedurls/shortened",{"_index":678,"title":{},"body":{"modules/ShortenedUrlsModule.html":{}}}],["src/services/shortenedurls/update",{"_index":583,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"coverage.html":{}}}],["src/services/users/create",{"_index":301,"title":{},"body":{"injectables/CreateUsersService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/services/users/dto/create",{"_index":278,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/services/users/dto/update",{"_index":688,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/services/users/list",{"_index":461,"title":{},"body":{"injectables/ListUsersService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/services/users/update",{"_index":691,"title":{},"body":{"injectables/UpdateUsersService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/services/users/users.module.ts",{"_index":795,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/utils/password.utils",{"_index":314,"title":{},"body":{"injectables/CreateUsersService.html":{},"injectables/ListUsersService.html":{},"injectables/UpdateUsersService.html":{}}}],["src/utils/password.utils.ts",{"_index":822,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standardized",{"_index":364,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{}}}],["start",{"_index":877,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":880,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":882,"title":{},"body":{"index.html":{}}}],["started",{"_index":858,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":870,"title":{},"body":{"index.html":{}}}],["statements",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpAllExceptionFilter.html":{}}}],["statuscode",{"_index":766,"title":{},"body":{"controllers/UsersController.html":{}}}],["stay",{"_index":905,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":419,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["stream",{"_index":514,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["string",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateShortenedUrlsDto.html":{},"injectables/CreateShortenedUrlsService.html":{},"classes/CreateUserDto.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{},"miscellaneous/variables.html":{}}}],["string'})@length(8",{"_index":288,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["subject",{"_index":946,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":939,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":953,"title":{},"body":{"license.html":{}}}],["succeeds",{"_index":481,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["successful",{"_index":402,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["summary",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["super",{"_index":423,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":407,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":896,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":980,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggermodule.createdocument(app",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup('docs",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":526,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["tap",{"_index":521,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["test",{"_index":885,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":888,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":887,"title":{},"body":{"index.html":{}}}],["tests",{"_index":884,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":894,"title":{},"body":{"index.html":{}}}],["this.__deleteshortenedurlsservice.remove(id",{"_index":623,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["this._addclickcountshortenedurlsrepository.findoneorfail",{"_index":53,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{}}}],["this._addclickcountshortenedurlsrepository.save(url",{"_index":56,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{}}}],["this._addclickshortenedurlsservice.addclickcount(url.id",{"_index":459,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["this._createshortenedurlsrepository.create",{"_index":263,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["this._createshortenedurlsrepository.save(newurl",{"_index":264,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["this._createshortenedurlsservice.create",{"_index":612,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["this._createusersservicerepository.create",{"_index":319,"title":{},"body":{"injectables/CreateUsersService.html":{}}}],["this._createusersservicerepository.create(createuserdto",{"_index":769,"title":{},"body":{"controllers/UsersController.html":{}}}],["this._createusersservicerepository.save(user",{"_index":320,"title":{},"body":{"injectables/CreateUsersService.html":{}}}],["this._deleteshortenedurlsrepository.findoneorfail",{"_index":332,"title":{},"body":{"injectables/DeleteShortenedUrlsService.html":{}}}],["this._deleteshortenedurlsrepository.save(url",{"_index":335,"title":{},"body":{"injectables/DeleteShortenedUrlsService.html":{}}}],["this._listshortenedurlsrepository.find",{"_index":449,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["this._listshortenedurlsrepository.findone",{"_index":456,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["this._listshortenedurlsrepository.findoneorfail",{"_index":458,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["this._listshortenedurlsservice.findbyoriginalurl(originalurl",{"_index":269,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["this._listshortenedurlsservice.findbyoriginalurlanduserid",{"_index":270,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["this._listshortenedurlsservice.findbyuserid(userid",{"_index":610,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["this._listshortenedurlsservice.redirect(shorturl",{"_index":596,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["this._listusersservice.findone(id",{"_index":699,"title":{},"body":{"injectables/UpdateUsersService.html":{}}}],["this._listusersservice.isemailregistered(createuserdto.email",{"_index":316,"title":{},"body":{"injectables/CreateUsersService.html":{}}}],["this._listusersservice.isemailregistered(updateuserdto.email",{"_index":702,"title":{},"body":{"injectables/UpdateUsersService.html":{}}}],["this._listusersservice.validateuser(email",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._listusersservicerepository.find",{"_index":485,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["this._listusersservicerepository.findall",{"_index":759,"title":{},"body":{"controllers/UsersController.html":{}}}],["this._listusersservicerepository.findone",{"_index":490,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["this._listusersservicerepository.findone(+id",{"_index":762,"title":{},"body":{"controllers/UsersController.html":{}}}],["this._listusersservicerepository.findoneorfail",{"_index":486,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["this._updateshortenedurlsrepository.findoneorfail",{"_index":712,"title":{},"body":{"injectables/UpdatetShortenedUrlsService.html":{}}}],["this._updateshortenedurlsrepository.preload",{"_index":714,"title":{},"body":{"injectables/UpdatetShortenedUrlsService.html":{}}}],["this._updateshortenedurlsrepository.save(updatebody",{"_index":715,"title":{},"body":{"injectables/UpdatetShortenedUrlsService.html":{}}}],["this._updatetshortenedurlsservice.update",{"_index":618,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["this._updateusersservicerepository.preload",{"_index":706,"title":{},"body":{"injectables/UpdateUsersService.html":{}}}],["this._updateusersservicerepository.save(user",{"_index":707,"title":{},"body":{"injectables/UpdateUsersService.html":{}}}],["this._updateusersservicerepository.update(+id",{"_index":772,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.authservice.login(req.user",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":503,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.checkifshortenedurlexistsfororiginalurl",{"_index":257,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["this.checkifshortenedurlexistsforuser",{"_index":255,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["this.generaterandomhash(6",{"_index":259,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["this.jwtservice.decode(token",{"_index":735,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["this.jwtservice.sign(payload",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error",{"_index":373,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{}}}],["this.logger.log(`after",{"_index":532,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["this.logger.log(`before",{"_index":527,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["throw",{"_index":412,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{}}}],["thrown",{"_index":410,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/ListUsersService.html":{},"injectables/UpdateUsersService.html":{}}}],["throws",{"_index":409,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/ListUsersService.html":{},"injectables/UpdateUsersService.html":{}}}],["time",{"_index":525,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["timestamp",{"_index":378,"title":{},"body":{"classes/HttpAllExceptionFilter.html":{},"controllers/UsersController.html":{}}}],["timestamptz",{"_index":635,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}}}],["token",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UserMiddleware.html":{}}}],["tokens",{"_index":722,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["tort",{"_index":975,"title":{},"body":{"license.html":{}}}],["touch",{"_index":906,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":787,"title":{},"body":{"entities/UsersModel.html":{},"dependencies.html":{}}}],["true",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"entities/ShortenedUrlsModel.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{}}}],["true})@apiresponse({status",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["try",{"_index":734,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["twitter",{"_index":912,"title":{},"body":{"index.html":{}}}],["type",{"_index":23,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateShortenedUrlsDto.html":{},"injectables/CreateShortenedUrlsService.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginDto.html":{},"classes/ModelNotFoundException.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":39,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"entities/ShortenedUrlsModel.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"entities/UsersModel.html":{},"dependencies.html":{}}}],["typeorm/error/entitynotfounderror",{"_index":545,"title":{},"body":{"classes/ModelNotFoundException.html":{}}}],["types",{"_index":686,"title":{},"body":{"classes/UpdateShortenedUrlsDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":869,"title":{},"body":{"index.html":{}}}],["uma",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unauthorizedexception",{"_index":403,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":482,"title":{},"body":{"injectables/ListUsersService.html":{},"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["undefined})@apiconflictresponse({description",{"_index":741,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@apiokresponse({description",{"_index":749,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@put(':id",{"_index":750,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@put(':id')@apioperation({summary",{"_index":576,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["unique",{"_index":650,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}}}],["unit",{"_index":883,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{}}}],["unlicensed",{"_index":990,"title":{},"body":{"properties.html":{}}}],["update",{"_index":457,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{},"modules/ShortenedUrlsModule.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["update(@param('id",{"_index":771,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":572,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"controllers/UsersController.html":{}}}],["updatebody",{"_index":713,"title":{},"body":{"injectables/UpdatetShortenedUrlsService.html":{}}}],["updated",{"_index":34,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{}}}],["updated_at",{"_index":653,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}}}],["updatedat",{"_index":452,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"controllers/UsersController.html":{},"entities/UsersModel.html":{}}}],["updatedatecolumn",{"_index":666,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}}}],["updatedatecolumn({type",{"_index":652,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}}}],["updates",{"_index":695,"title":{},"body":{"injectables/UpdateUsersService.html":{}}}],["updateshortenedurlsdto",{"_index":573,"title":{"classes/UpdateShortenedUrlsDto.html":{}},"body":{"controllers/ShortenedUrlsController.html":{},"classes/UpdateShortenedUrlsDto.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"coverage.html":{}}}],["updatetshortenedurlsservice",{"_index":582,"title":{"injectables/UpdatetShortenedUrlsService.html":{}},"body":{"controllers/ShortenedUrlsController.html":{},"modules/ShortenedUrlsModule.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"coverage.html":{},"overview.html":{}}}],["updateuserdto",{"_index":687,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"injectables/UpdateUsersService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["updateuserdto.email",{"_index":701,"title":{},"body":{"injectables/UpdateUsersService.html":{}}}],["updateuserdto.password",{"_index":704,"title":{},"body":{"injectables/UpdateUsersService.html":{}}}],["updateusersservice",{"_index":690,"title":{"injectables/UpdateUsersService.html":{}},"body":{"injectables/UpdateUsersService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["updating",{"_index":711,"title":{},"body":{"injectables/UpdatetShortenedUrlsService.html":{}}}],["url",{"_index":32,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"classes/CreateShortenedUrlsDto.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{},"injectables/UpdatetShortenedUrlsService.html":{}}}],["url'})@apicreatedresponse({description",{"_index":570,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["url.clickcount",{"_index":54,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{}}}],["url.deletedat",{"_index":333,"title":{},"body":{"injectables/DeleteShortenedUrlsService.html":{}}}],["url.originalurl",{"_index":460,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["urls",{"_index":444,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{},"miscellaneous/variables.html":{}}}],["urls.controller",{"_index":680,"title":{},"body":{"modules/ShortenedUrlsModule.html":{}}}],["urls.controller.ts",{"_index":554,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"coverage.html":{}}}],["urls.controller.ts:100",{"_index":571,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["urls.controller.ts:130",{"_index":577,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["urls.controller.ts:149",{"_index":567,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["urls.controller.ts:52",{"_index":563,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["urls.controller.ts:83",{"_index":560,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["urls.dto",{"_index":250,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{},"classes/UpdateShortenedUrlsDto.html":{},"injectables/UpdatetShortenedUrlsService.html":{}}}],["urls.dto.ts",{"_index":209,"title":{},"body":{"classes/CreateShortenedUrlsDto.html":{},"classes/UpdateShortenedUrlsDto.html":{},"coverage.html":{}}}],["urls.dto.ts:11",{"_index":215,"title":{},"body":{"classes/CreateShortenedUrlsDto.html":{}}}],["urls.entity",{"_index":42,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"entities/UsersModel.html":{}}}],["urls.entity.ts",{"_index":626,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"coverage.html":{}}}],["urls.entity.ts:19",{"_index":644,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["urls.entity.ts:22",{"_index":648,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["urls.entity.ts:25",{"_index":651,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["urls.entity.ts:28",{"_index":633,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["urls.entity.ts:31",{"_index":659,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["urls.entity.ts:34",{"_index":630,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["urls.entity.ts:41",{"_index":637,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["urls.entity.ts:48",{"_index":654,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["urls.entity.ts:55",{"_index":641,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["urls.entity.ts:59",{"_index":657,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["urls.map",{"_index":453,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["urls.provider",{"_index":682,"title":{},"body":{"modules/ShortenedUrlsModule.html":{}}}],["urls.provider.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["urls.provider.module.ts",{"_index":679,"title":{},"body":{"modules/ShortenedUrlsModule.html":{}}}],["urls.provider.ts",{"_index":808,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["urls.service",{"_index":252,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{},"modules/ShortenedUrlsModule.html":{}}}],["urls.service.ts",{"_index":10,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/CreateShortenedUrlsService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"coverage.html":{}}}],["urls.service.ts:17",{"_index":331,"title":{},"body":{"injectables/DeleteShortenedUrlsService.html":{}}}],["urls.service.ts:18",{"_index":28,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{}}}],["urls.service.ts:19",{"_index":443,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["urls.service.ts:20",{"_index":710,"title":{},"body":{"injectables/UpdatetShortenedUrlsService.html":{}}}],["urls.service.ts:21",{"_index":243,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["urls.service.ts:37",{"_index":439,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["urls.service.ts:49",{"_index":441,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["urls.service.ts:58",{"_index":233,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["urls.service.ts:6",{"_index":328,"title":{},"body":{"injectables/DeleteShortenedUrlsService.html":{}}}],["urls.service.ts:60",{"_index":446,"title":{},"body":{"injectables/ListShortenedUrlsService.html":{}}}],["urls.service.ts:7",{"_index":19,"title":{},"body":{"injectables/AddClickShortenedUrlsService.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/UpdatetShortenedUrlsService.html":{}}}],["urls.service.ts:72",{"_index":240,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["urls.service.ts:8",{"_index":230,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["urls.service.ts:89",{"_index":246,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{}}}],["urls/:userid",{"_index":599,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["urls/:userid')@apioperation({summary",{"_index":557,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["usando",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":717,"title":{},"body":{"injectables/UserMiddleware.html":{},"license.html":{}}}],["use(req",{"_index":723,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["usefactory",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":597,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@httpcode(httpstatus.no_content)@delete(':id')@apinocontentresponse({description",{"_index":564,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["useguards(jwtauthguard)@httpcode(httpstatus.ok)@apioperation({summary",{"_index":574,"title":{},"body":{"controllers/ShortenedUrlsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@httpcode(httpstatus.ok)@get(':id')@apioperation({summary",{"_index":746,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@httpcode(httpstatus.ok)@get()@apioperation({summary",{"_index":743,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(localauthguard",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('login')@apioperation({summary",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateShortenedUrlsService.html":{},"classes/CreateUserDto.html":{},"injectables/CreateUsersService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/ListShortenedUrlsService.html":{},"injectables/ListUsersService.html":{},"injectables/LocalStrategy.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"injectables/UpdateUsersService.html":{},"injectables/UpdatetShortenedUrlsService.html":{},"injectables/UserMiddleware.html":{},"controllers/UsersController.html":{}}}],["user's",{"_index":478,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["user'})@apicreatedresponse({description",{"_index":740,"title":{},"body":{"controllers/UsersController.html":{}}}],["user'})@apiokresponse({description",{"_index":558,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["user.dto",{"_index":312,"title":{},"body":{"injectables/CreateUsersService.html":{},"classes/UpdateUserDto.html":{},"injectables/UpdateUsersService.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":279,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:15",{"_index":286,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:23",{"_index":293,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:27",{"_index":284,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.password",{"_index":492,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["user_id",{"_index":658,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["userexists",{"_index":489,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["userid",{"_index":239,"title":{},"body":{"injectables/CreateShortenedUrlsService.html":{},"injectables/DeleteShortenedUrlsService.html":{},"injectables/JwtStrategy.html":{},"injectables/ListShortenedUrlsService.html":{},"controllers/ShortenedUrlsController.html":{},"entities/ShortenedUrlsModel.html":{},"injectables/UpdatetShortenedUrlsService.html":{}}}],["usermiddleware",{"_index":93,"title":{"injectables/UserMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/UserMiddleware.html":{},"coverage.html":{}}}],["username",{"_index":429,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["usernamefield",{"_index":500,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["users",{"_index":469,"title":{},"body":{"injectables/ListUsersService.html":{},"entities/ShortenedUrlsModel.html":{},"controllers/UsersController.html":{}}}],["users'})@apiokresponse({description",{"_index":744,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.service",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CreateUsersService.html":{},"injectables/UpdateUsersService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users.service.ts",{"_index":302,"title":{},"body":{"injectables/CreateUsersService.html":{},"injectables/ListUsersService.html":{},"injectables/UpdateUsersService.html":{},"coverage.html":{}}}],["users.service.ts:18",{"_index":468,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["users.service.ts:23",{"_index":307,"title":{},"body":{"injectables/CreateUsersService.html":{}}}],["users.service.ts:24",{"_index":694,"title":{},"body":{"injectables/UpdateUsersService.html":{}}}],["users.service.ts:29",{"_index":471,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["users.service.ts:42",{"_index":474,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["users.service.ts:62",{"_index":477,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["users.service.ts:7",{"_index":466,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["users.service.ts:9",{"_index":304,"title":{},"body":{"injectables/CreateUsersService.html":{},"injectables/UpdateUsersService.html":{}}}],["users.shortenedurls",{"_index":673,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["users.shortenedurls)@joincolumn(['undefined",{"_index":656,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["users/list",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["users/user.entity",{"_index":667,"title":{},"body":{"entities/ShortenedUrlsModel.html":{}}}],["users/users.module",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{}}}],["users_repository",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":737,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodel",{"_index":180,"title":{"entities/UsersModel.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CreateUsersService.html":{},"injectables/ListUsersService.html":{},"entities/ShortenedUrlsModel.html":{},"injectables/UpdateUsersService.html":{},"entities/UsersModel.html":{},"coverage.html":{}}}],["usersmodule",{"_index":73,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersproviders",{"_index":797,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":416,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(req",{"_index":497,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validated",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ListUsersService.html":{}}}],["validates",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ListUsersService.html":{}}}],["validateuser",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ListUsersService.html":{}}}],["validateuser(email",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ListUsersService.html":{}}}],["validation",{"_index":480,"title":{},"body":{"injectables/ListUsersService.html":{}}}],["validator",{"_index":219,"title":{},"body":{"classes/CreateShortenedUrlsDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":516,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":991,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varying",{"_index":646,"title":{},"body":{"entities/ShortenedUrlsModel.html":{},"entities/UsersModel.html":{}}}],["version",{"_index":988,"title":{},"body":{"properties.html":{}}}],["void",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpAllExceptionFilter.html":{},"injectables/UserMiddleware.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":959,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":955,"title":{},"body":{"license.html":{}}}],["watch",{"_index":878,"title":{},"body":{"index.html":{}}}],["website",{"_index":910,"title":{},"body":{"index.html":{}}}],["whether",{"_index":972,"title":{},"body":{"license.html":{}}}],["without",{"_index":931,"title":{},"body":{"license.html":{}}}],["www.facebook.com",{"_index":606,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["www.google.com",{"_index":220,"title":{},"body":{"classes/CreateShortenedUrlsDto.html":{},"controllers/ShortenedUrlsController.html":{}}}],["www.google.com'})@isnotempty()@isstring",{"_index":214,"title":{},"body":{"classes/CreateShortenedUrlsDto.html":{}}}],["www.googlex.com",{"_index":615,"title":{},"body":{"controllers/ShortenedUrlsController.html":{}}}],["yarn",{"_index":872,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":899,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShortenedUrlsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AddClickShortenedUrlsService.html":{"url":"injectables/AddClickShortenedUrlsService.html","title":"injectable - AddClickShortenedUrlsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddClickShortenedUrlsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/ShortenedUrls/add-click-count-shortened-urls.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addClickCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_addClickCountShortenedUrlsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/Services/ShortenedUrls/add-click-count-shortened-urls.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _addClickCountShortenedUrlsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addClickCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    addClickCount(shortenedUrlId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/ShortenedUrls/add-click-count-shortened-urls.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                shortenedUrlId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the shortened URL.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \nThe updated shortened URL details.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\n\nimport { Repository } from 'typeorm';\nimport { ShortenedUrlsModel } from 'src/Entities/ShortenedUrls/shortened-urls.entity';\n\n@Injectable()\nexport class AddClickShortenedUrlsService {\n  constructor(\n    @Inject('SHORTENEDURLS_REPOSITORY')\n    private readonly _addClickCountShortenedUrlsRepository: Repository,\n  ) {}\n\n  /**\n   * @description Increment the click count for a shortened URL.\n   * @param {number} shortenedUrlId - The ID of the shortened URL.\n   * @returns {Promise} - The updated shortened URL details.\n   */\n  async addClickCount(shortenedUrlId: number) {\n    const url = await this._addClickCountShortenedUrlsRepository.findOneOrFail({\n      where: { id: shortenedUrlId },\n    });\n\n    url.clickCount += 1;\n    await this._addClickCountShortenedUrlsRepository.save(url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nShortenedUrlsModule\n\nShortenedUrlsModule\n\nAppModule -->\n\nShortenedUrlsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            ShortenedUrlsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { DatabaseModule } from './database/database.module';\nimport { UsersModule } from './Services/Users/users.module';\nimport { AuthModule } from './Services/Auth/auth.module';\nimport { ShortenedUrlsModule } from './Services/ShortenedUrls/shortened-urls.provider.module';\nimport { UserMiddleware } from './common/middlewares/user.middleware';\nimport { JwtModule } from '@nestjs/jwt';\n\n@Module({\n  imports: [\n    DatabaseModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: '.env',\n    }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '20m' },\n    }),\n    AuthModule,\n    UsersModule,\n    ShortenedUrlsModule,\n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(UserMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Controllers/Auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('login')@ApiOperation({summary: 'Login with email and password'})@ApiBody({description: 'AuthLogin DTO', type: LoginDto, required: true})@ApiResponse({status: 200, description: '\"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImdhYnJpZWwxQGVtYWlsLmNvbSIsInVzZXJOYW1lIjoiR2FicmllbCIsImlkIjoxLCJpYXQiOjE2ODkyNzE4NTgsImV4cCI6MTY4OTI3MzA1OH0.Zjn2s2Lf1RYFRxM2CNYWauV3hsrRjkac8F1Rp3YdaGs\"'})\n                \n            \n\n                    \n                        \n                            Defined in src/Controllers/Auth/auth.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Request, Post, UseGuards } from '@nestjs/common';\nimport { AuthService } from 'src/Services/Auth/auth.service';\nimport { LocalAuthGuard } from 'src/Services/Auth/guards/local-auth.guard';\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { LoginDto } from 'src/Services/Auth/dto/login.dto';\n\n@Controller('auth')\n@ApiTags('Auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  @ApiOperation({ summary: 'Login with email and password' })\n  @ApiBody({\n    description: 'AuthLogin DTO',\n    type: LoginDto,\n    required: true,\n  })\n  @ApiResponse({\n    status: 200,\n    description:\n      '\"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImdhYnJpZWwxQGVtYWlsLmNvbSIsInVzZXJOYW1lIjoiR2FicmllbCIsImlkIjoxLCJpYXQiOjE2ODkyNzE4NTgsImV4cCI6MTY4OTI3MzA1OH0.Zjn2s2Lf1RYFRxM2CNYWauV3hsrRjkac8F1Rp3YdaGs\"',\n  })\n  async login(@Request() req) {\n    return this.authService.login(req.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Services/Auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { UsersModule } from '../Users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthController } from 'src/Controllers/Auth/auth.controller';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: '.env',\n    }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '20m' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/Auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_listUsersService: ListUsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/Services/Auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _listUsersService\n                                                  \n                                                        \n                                                                        ListUsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: UsersModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/Auth/auth.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UsersModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user for whom to generate the token.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nAn object containing the generated access token.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/Auth/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe email of the user to validate.\n\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe password of the user to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise that resolves to the validated user.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ListUsersService } from '../Users/list-users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { UsersModel } from 'src/Entities/Users/user.entity';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly _listUsersService: ListUsersService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  /**\n   * @description Validates a user by checking the provided email and password.\n   * @param {string} email - The email of the user to validate.\n   * @param {string} password - The password of the user to validate.\n   * @returns {Promise} - A promise that resolves to the validated user.\n   */\n  async validateUser(email: string, password: string): Promise {\n    return await this._listUsersService.validateUser(email, password);\n  }\n\n  /**\n   * @description Generates an access token for a logged-in user.\n   * @param {UsersModel} user - The user for whom to generate the token.\n   * @returns {object} - An object containing the generated access token.\n   */\n  async login(user: UsersModel) {\n    const { email, id } = user;\n    const payload = { email, id };\n\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateShortenedUrlsDto.html":{"url":"classes/CreateShortenedUrlsDto.html","title":"class - CreateShortenedUrlsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateShortenedUrlsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/ShortenedUrls/dto/create-shortened-urls.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                originalUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        originalUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'URL to be shortened', example: 'www.google.com'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Services/ShortenedUrls/dto/create-shortened-urls.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateShortenedUrlsDto {\n  @ApiProperty({\n    description: 'URL to be shortened',\n    example: 'www.google.com',\n  })\n  @IsNotEmpty()\n  @IsString()\n  readonly originalUrl: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateShortenedUrlsService.html":{"url":"injectables/CreateShortenedUrlsService.html","title":"injectable - CreateShortenedUrlsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateShortenedUrlsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/ShortenedUrls/create-shortened-urls.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkIfShortenedUrlExistsForOriginalUrl\n                            \n                            \n                                    Async\n                                checkIfShortenedUrlExistsForUser\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                generateRandomHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_createShortenedUrlsRepository: Repository, _listShortenedUrlsService: ListShortenedUrlsService)\n                    \n                \n                        \n                            \n                                Defined in src/Services/ShortenedUrls/create-shortened-urls.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _createShortenedUrlsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _listShortenedUrlsService\n                                                  \n                                                        \n                                                                        ListShortenedUrlsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfShortenedUrlExistsForOriginalUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfShortenedUrlExistsForOriginalUrl(originalUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/ShortenedUrls/create-shortened-urls.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                originalUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe original URL to check.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe details of the existing shortened URL, if found.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfShortenedUrlExistsForUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfShortenedUrlExistsForUser(originalUrl: string, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/ShortenedUrls/create-shortened-urls.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                originalUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe original URL to check.\n\n\n                                            \n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe details of the existing shortened URL, if found.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createShortenedUrlsDto: CreateShortenedUrlsDto, userId: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/ShortenedUrls/create-shortened-urls.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createShortenedUrlsDto\n                                            \n                                                            CreateShortenedUrlsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDTO containing details for creating a shortened URL.\n\n\n                                            \n                                        \n                                        \n                                                userId\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nThe shortened URL.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomHash\n                        \n                    \n                \n            \n            \n                \ngenerateRandomHash(length: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/ShortenedUrls/create-shortened-urls.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe length of the hash.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nThe generated hash.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { CreateShortenedUrlsDto } from './dto/create-shortened-urls.dto';\nimport { ListShortenedUrlsService } from './list-shortened-urls.service';\nimport { Repository } from 'typeorm';\nimport { ShortenedUrlsModel } from 'src/Entities/ShortenedUrls/shortened-urls.entity';\n\n@Injectable()\nexport class CreateShortenedUrlsService {\n  constructor(\n    @Inject('SHORTENEDURLS_REPOSITORY')\n    private readonly _createShortenedUrlsRepository: Repository,\n    private readonly _listShortenedUrlsService: ListShortenedUrlsService,\n  ) {}\n\n  /**\n   * @description Create a new shortened URL.\n   * @param {CreateShortenedUrlsDto} createShortenedUrlsDto - DTO containing details for creating a shortened URL.\n   * @param {number} userId - The ID of the user.\n   * @returns {Promise} - The shortened URL.\n   */\n  async create(\n    createShortenedUrlsDto: CreateShortenedUrlsDto,\n    userId: number | null,\n  ) {\n    const existingUrlExists =\n      userId !== null\n        ? await this.checkIfShortenedUrlExistsForUser(\n            createShortenedUrlsDto.originalUrl,\n            userId,\n          )\n        : await this.checkIfShortenedUrlExistsForOriginalUrl(\n            createShortenedUrlsDto.originalUrl,\n          );\n\n    if (existingUrlExists) {\n      return `${process.env.API_DOMAIN}:${process.env.APP_PORT}/${existingUrlExists.shortUrl}`;\n    }\n\n    const hash = this.generateRandomHash(6);\n\n    const shortUrl = `${process.env.API_DOMAIN}:${process.env.APP_PORT}/${hash}`;\n\n    const newUrl = this._createShortenedUrlsRepository.create({\n      originalUrl: createShortenedUrlsDto.originalUrl,\n      shortUrl: hash,\n      userId,\n    });\n    await this._createShortenedUrlsRepository.save(newUrl);\n\n    return shortUrl;\n  }\n\n  /**\n   * @description Checks if a shortened URL exists for a given original URL.\n   * @param {string} originalUrl - The original URL to check.\n   * @returns {Promise} - The details of the existing shortened URL, if found.\n   */\n  async checkIfShortenedUrlExistsForOriginalUrl(\n    originalUrl: string,\n  ): Promise {\n    const existingUrl =\n      await this._listShortenedUrlsService.findByOriginalUrl(originalUrl);\n    return existingUrl;\n  }\n\n  /**\n   * @description Checks if a shortened URL exists for a given original URL and user ID.\n   * @param {string} originalUrl - The original URL to check.\n   * @param {number} userId - The ID of the user.\n   * @returns {Promise} - The details of the existing shortened URL, if found.\n   */\n  async checkIfShortenedUrlExistsForUser(\n    originalUrl: string,\n    userId: number,\n  ): Promise {\n    const existingUrl =\n      await this._listShortenedUrlsService.findByOriginalUrlAndUserId(\n        originalUrl,\n        userId,\n      );\n    return existingUrl;\n  }\n\n  /**\n   * @description Generate a random hash of a specified length.\n   * @param {number} length - The length of the hash.\n   * @returns {string} - The generated hash.\n   */\n  generateRandomHash(length: number): string {\n    const characters =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let result = '';\n\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/Users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                active\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean({message: 'Active should be a boolean'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Services/Users/dto/create-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Email to user', example: 'bruno@mail.com'})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Services/Users/dto/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Password to user', example: 'Q1w2e3r4t5y6'})@IsNotEmpty()@IsString({message: 'Password should be a string'})@Length(8, 255, {message: 'Password length should be between 8 and 255 characters'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Services/Users/dto/create-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Length,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({ description: 'Email to user', example: 'bruno@mail.com' })\n  @IsNotEmpty()\n  @IsEmail()\n  readonly email: string;\n\n  @ApiProperty({ description: 'Password to user', example: 'Q1w2e3r4t5y6' })\n  @IsNotEmpty()\n  @IsString({ message: 'Password should be a string' })\n  @Length(8, 255, {\n    message: 'Password length should be between 8 and 255 characters',\n  })\n  readonly password: string;\n\n  @IsBoolean({ message: 'Active should be a boolean' })\n  @IsOptional()\n  readonly active?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUsersService.html":{"url":"injectables/CreateUsersService.html","title":"injectable - CreateUsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/Users/create-users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_createUsersServiceRepository: Repository, _listUsersService: ListUsersService)\n                    \n                \n                        \n                            \n                                Defined in src/Services/Users/create-users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _createUsersServiceRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _listUsersService\n                                                  \n                                                        \n                                                                        ListUsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/Users/create-users.service.ts:23\n                        \n                    \n\n\n            \n                \n                        Creates a new user based on the provided data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn object containing the data of the user to be created.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise - A promise that resolves to the created user.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { Repository } from 'typeorm';\nimport { UsersModel } from 'src/Entities/Users/user.entity';\nimport { ListUsersService } from './list-users.service';\nimport { generateHash } from 'src/utils/password.utils';\n\n@Injectable()\nexport class CreateUsersService {\n  constructor(\n    @Inject('USERS_REPOSITORY')\n    private readonly _createUsersServiceRepository: Repository,\n    private readonly _listUsersService: ListUsersService,\n  ) {}\n\n  /**\n   * Creates a new user based on the provided data.\n   *\n   * @param createUserDto - An object containing the data of the user to be created.\n   *\n   * @returns Promise - A promise that resolves to the created user.\n   */\n  async create(createUserDto: CreateUserDto): Promise {\n    await this._listUsersService.isEmailRegistered(createUserDto.email);\n\n    const passowrdHash = await generateHash(createUserDto.password);\n\n    const user = this._createUsersServiceRepository.create({\n      ...createUserDto,\n      password: passowrdHash,\n    });\n\n    return await this._createUsersServiceRepository.save(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProviders } from 'src/database.providers';\n\n@Module({\n  providers: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteShortenedUrlsService.html":{"url":"injectables/DeleteShortenedUrlsService.html","title":"injectable - DeleteShortenedUrlsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteShortenedUrlsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/ShortenedUrls/delete-shortened-urls.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_deleteShortenedUrlsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/Services/ShortenedUrls/delete-shortened-urls.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _deleteShortenedUrlsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/ShortenedUrls/delete-shortened-urls.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the shortened URL.\n\n\n                                            \n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ShortenedUrlsModel } from 'src/Entities/ShortenedUrls/shortened-urls.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class DeleteShortenedUrlsService {\n  constructor(\n    @Inject('SHORTENEDURLS_REPOSITORY')\n    private readonly _deleteShortenedUrlsRepository: Repository,\n  ) {}\n\n  /**\n   * @description Remove a shortened URL by its ID and user ID.\n   * @param {number} id - The ID of the shortened URL.\n   * @param {number} userId - The ID of the user.\n   */\n  async remove(id: number, userId: number) {\n    const url = await this._deleteShortenedUrlsRepository.findOneOrFail({\n      where: { active: true, id, userId },\n    });\n\n    url.deletedAt = new Date();\n    await this._deleteShortenedUrlsRepository.save(url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpAllExceptionFilter.html":{"url":"classes/HttpAllExceptionFilter.html","title":"class - HttpAllExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpAllExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/http-all-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger)\n                    \n                \n                        \n                            \n                                Defined in src/common/filters/http-all-exception.filter.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn optional logger instance.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/http-all-exception.filter.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe caught exception.\n\n\n                                            \n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe host containing request and response objects.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n  Logger,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpAllExceptionFilter implements ExceptionFilter {\n  /**\n   * @description Creates an instance of the HttpAllExceptionFilter.\n   * @param {Logger} logger - An optional logger instance.\n   */\n  constructor(\n    private readonly logger = new Logger(HttpAllExceptionFilter.name),\n  ) {}\n\n  /**\n   * @description Handles HTTP exceptions, logs error details, and sends a standardized response.\n   * @param {HttpException} exception - The caught exception.\n   * @param {ArgumentsHost} host - The host containing request and response objects.\n   */\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const message =\n      exception instanceof HttpException ? exception.getResponse() : exception;\n\n    this.logger.error(\n      `Http Status: ${status} Error Message: ${JSON.stringify(message)}`,\n    );\n\n    response.status(status).json({\n      path: request.url,\n      timestamp: new Date().toISOString(),\n      errorList: message,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/Auth/guards/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/Auth/guards/jwt-auth.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe execution context.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \nReturns the result of the parent canActivate method.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/Auth/guards/jwt-auth.guard.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                err\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error that occurred during authentication.\n\n\n                                            \n                                        \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user object extracted from the token.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \nReturns the user object if authentication is successful.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  /**\n   * @description Checks if the request can be activated by calling the parent `canActivate` method.\n   * @param {ExecutionContext} context - The execution context.\n   * @returns {boolean} - Returns the result of the parent `canActivate` method.\n   */\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  /**\n   * @description Handles the result of the authentication attempt.\n   * @param {Error} err - The error that occurred during authentication.\n   * @param {any} user - The user object extracted from the token.\n   * @throws {UnauthorizedException} - Thrown if authentication fails.\n   * @returns {any} - Returns the user object if authentication is successful.\n   */\n  handleRequest(err, user) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/Auth/strategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/Services/Auth/strategies/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/Auth/strategies/jwt.strategy.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: any) {\n    const { email, userName, id } = payload;\n    return { email, userName, userId: id };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListShortenedUrlsService.html":{"url":"injectables/ListShortenedUrlsService.html","title":"injectable - ListShortenedUrlsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ListShortenedUrlsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/ShortenedUrls/list-shortened-urls.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByOriginalUrl\n                            \n                            \n                                    Async\n                                findByOriginalUrlAndUserId\n                            \n                            \n                                    Async\n                                findByUserId\n                            \n                            \n                                    Async\n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_listShortenedUrlsRepository: Repository, _addClickShortenedUrlsService: AddClickShortenedUrlsService)\n                    \n                \n                        \n                            \n                                Defined in src/Services/ShortenedUrls/list-shortened-urls.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _listShortenedUrlsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _addClickShortenedUrlsService\n                                                  \n                                                        \n                                                                        AddClickShortenedUrlsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByOriginalUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByOriginalUrl(originalUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/ShortenedUrls/list-shortened-urls.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                originalUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe original URL.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nThe shortened URL details.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByOriginalUrlAndUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByOriginalUrlAndUserId(originalUrl: string, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/ShortenedUrls/list-shortened-urls.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                originalUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe original URL.\n\n\n                                            \n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user id.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nThe shortened URL details.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUserId(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/ShortenedUrls/list-shortened-urls.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nList of shortened URLs for the user.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        redirect\n                        \n                    \n                \n            \n            \n                \n                        \n                    redirect(shortUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/ShortenedUrls/list-shortened-urls.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                shortUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe shortened URL.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nThe original URL.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ShortenedUrlsModel } from 'src/Entities/ShortenedUrls/shortened-urls.entity';\nimport { Repository } from 'typeorm';\nimport { AddClickShortenedUrlsService } from './add-click-count-shortened-urls.service';\n\n@Injectable()\nexport class ListShortenedUrlsService {\n  constructor(\n    @Inject('SHORTENEDURLS_REPOSITORY')\n    private readonly _listShortenedUrlsRepository: Repository,\n    private readonly _addClickShortenedUrlsService: AddClickShortenedUrlsService,\n  ) {}\n\n  /**\n   * @description Find shortened URLs by user ID.\n   * @param {number} userId - The ID of the user.\n   * @returns {Promise} - List of shortened URLs for the user.\n   */\n  async findByUserId(userId: number): Promise {\n    const urls = await this._listShortenedUrlsRepository.find({\n      where: { userId, active: true },\n      select: ['id', 'shortUrl', 'originalUrl', 'clickCount', 'updatedAt'],\n    });\n\n    urls.map(\n      (i) =>\n        (i.shortUrl = `${process.env.API_DOMAIN}:${process.env.APP_PORT}/${i.shortUrl}`),\n    );\n    return urls;\n  }\n\n  /**\n   * @description Find a shortened URL by its original URL.\n   * @param {string} originalUrl - The original URL.\n   * @returns {Promise} - The shortened URL details.\n   */\n  async findByOriginalUrl(originalUrl: string) {\n    return await this._listShortenedUrlsRepository.findOne({\n      where: { originalUrl },\n    });\n  }\n\n  /**\n   * @description Find a shortened URL by its original URL and userId.\n   * @param {string} originalUrl - The original URL.\n   * @param {number} userId - The user id.\n   * @returns {Promise} - The shortened URL details.\n   */\n  async findByOriginalUrlAndUserId(originalUrl: string, userId: number) {\n    return await this._listShortenedUrlsRepository.findOne({\n      where: { originalUrl, userId },\n    });\n  }\n\n  /**\n   * @description Redirect to the original URL and update click count.\n   * @param {string} shortUrl - The shortened URL.\n   * @returns {Promise} - The original URL.\n   */\n  async redirect(shortUrl: string): Promise {\n    const url = await this._listShortenedUrlsRepository.findOneOrFail({\n      where: { shortUrl },\n    });\n\n    await this._addClickShortenedUrlsService.addClickCount(url.id);\n\n    return { url: url.originalUrl };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListUsersService.html":{"url":"injectables/ListUsersService.html","title":"injectable - ListUsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ListUsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/Users/list-users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                isEmailRegistered\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_listUsersServiceRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/Services/Users/list-users.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _listUsersServiceRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/Users/list-users.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Returns all users.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A list of all users.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/Users/list-users.service.ts:29\n                        \n                    \n\n\n            \n                \n                        find a user with the given id.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user ID to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The user found or null if no user matches the ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isEmailRegistered\n                        \n                    \n                \n            \n            \n                \n                        \n                    isEmailRegistered(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/Users/list-users.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Checks if a user with the provided email exists.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    (string) - The email of the user to be checked.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Promise - A promise that resolves to true if the email exists, or false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/Users/list-users.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Validates a user's credentials.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe email of the user to be validated.\n\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe password of the user to be validated.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA promise that resolves to the user if validation succeeds, or undefined otherwise.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Inject, Injectable } from '@nestjs/common';\nimport { UsersModel } from 'src/Entities/Users/user.entity';\nimport { comparePassword } from 'src/utils/password.utils';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class ListUsersService {\n  constructor(\n    @Inject('USERS_REPOSITORY')\n    private readonly _listUsersServiceRepository: Repository,\n  ) {}\n\n  /**\n   * Returns all users.\n   *\n   * @returns A list of all users.\n   */\n  async findAll(): Promise {\n    return await this._listUsersServiceRepository.find();\n  }\n\n  /**\n   * find a user with the given id.\n   *\n   * @param id - The user ID to find.\n   *\n   * @returns The user found or `null` if no user matches the ID.\n   */\n  async findOne(id: number): Promise {\n    return await this._listUsersServiceRepository.findOneOrFail({\n      where: { id },\n    });\n  }\n\n  /**\n   * Checks if a user with the provided email exists.\n   *\n   * @param email (string) - The email of the user to be checked.\n   * @returns Promise - A promise that resolves to `true` if the email exists, or `false` otherwise.\n   * @throws ConflictException - Thrown if the email is already registered.\n   */\n  async isEmailRegistered(email: string) {\n    const userExists = await this._listUsersServiceRepository.findOne({\n      where: { email },\n    });\n\n    if (userExists) {\n      throw new ConflictException(\n        'There is already a registered user with this email.',\n      );\n    }\n  }\n\n  /**\n   * Validates a user's credentials.\n   *\n   * @param {string} email - The email of the user to be validated.\n   * @param {string} password - The password of the user to be validated.\n   *\n   * @returns {Promise} - A promise that resolves to the user if validation succeeds, or undefined otherwise.\n   */\n  async validateUser(\n    email: string,\n    password: string,\n  ): Promise {\n    const user = await this._listUsersServiceRepository.findOne({\n      where: { email },\n    });\n    if (user && comparePassword(password, user.password)) {\n      return { ...user, password: undefined };\n    }\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/Auth/guards/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/Auth/strategies/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/Services/Auth/strategies/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(req: any, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/Auth/strategies/local.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'email',\n      passwordField: 'password',\n      passReqToCallback: true,\n    });\n  }\n\n  async validate(req: any, email: string, password: string): Promise {\n    const user = await this.authService.validateUser(email, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/logging.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(ctx: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/logging.interceptor.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe execution context.\n\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe next call handler.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nThe observable stream.\n\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LoggingInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in src/common/interceptors/logging.interceptor.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  Logger,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  private logger = new Logger(LoggingInterceptor.name);\n\n  /**\n   * @description Logs before and after a request, including the time taken.\n   * @param {ExecutionContext} ctx - The execution context.\n   * @param {CallHandler} next - The next call handler.\n   * @returns {Observable} - The observable stream.\n   */\n  intercept(ctx: ExecutionContext, next: CallHandler): Observable {\n    this.logger.log(`Before`);\n    const now = Date.now();\n    return next\n      .handle()\n      .pipe(tap(() => this.logger.log(`After ... ${Date.now() - now}ms ⚡️`)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/Auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Email for login', example: 'email@mail.com'})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Services/Auth/dto/login.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Password for login', example: 'password'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Services/Auth/dto/login.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @ApiProperty({ description: 'Email for login', example: 'email@mail.com' })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ description: 'Password for login', example: 'password' })\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModelNotFoundException.html":{"url":"classes/ModelNotFoundException.html","title":"class - ModelNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModelNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/model-not-found.exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: EntityNotFoundError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/model-not-found.exception.filter.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        EntityNotFoundError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe caught exception.\n\n\n                                            \n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe host containing the response object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\nimport { EntityNotFoundError } from 'typeorm/error/EntityNotFoundError';\n\n@Catch(EntityNotFoundError)\nexport class ModelNotFoundException implements ExceptionFilter {\n  /**\n   * @description Handles EntityNotFoundError exceptions and sends a custom response for model not found errors.\n   * @param {EntityNotFoundError} exception - The caught exception.\n   * @param {ArgumentsHost} host - The host containing the response object.\n   */\n  catch(exception: EntityNotFoundError, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    return response.status(HttpStatus.NOT_FOUND).json({\n      error: {\n        error: 'Not Found',\n        message: exception.message,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ShortenedUrlsController.html":{"url":"controllers/ShortenedUrlsController.html","title":"controller - ShortenedUrlsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ShortenedUrlsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Controllers/ShortenedUrls/shortened-urls.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findByUserId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                redirect\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                shortenUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUserId(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@UseGuards(JwtAuthGuard)@Get('user-urls/:userId')@ApiOperation({summary: 'Returns all URLs by user'})@ApiOkResponse({description: 'Find all shortened URL by user', content: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/Controllers/ShortenedUrls/shortened-urls.controller.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        redirect\n                        \n                    \n                \n            \n            \n                \n                        \n                    redirect(shortUrl: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Get(':shortUrl')@ApiOperation({summary: 'Returns the URL for redirection'})@ApiOkResponse({description: 'Find shortened URL by shortUrl', content: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/Controllers/ShortenedUrls/shortened-urls.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                shortUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@HttpCode(HttpStatus.NO_CONTENT)@Delete(':id')@ApiNoContentResponse({description: 'Remove shortened url by id'})@ApiOperation({summary: 'Delete shortened url by id'})\n                \n            \n\n                    \n                        \n                            Defined in src/Controllers/ShortenedUrls/shortened-urls.controller.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        shortenUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    shortenUrl(createShortenedUrlsDto: CreateShortenedUrlsDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.CREATED)@Post()@ApiOperation({summary: 'Create a new shortened url'})@ApiCreatedResponse({description: 'Create new shortened url', content: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/Controllers/ShortenedUrls/shortened-urls.controller.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createShortenedUrlsDto\n                                            \n                                                            CreateShortenedUrlsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateShortenedUrlsDto: UpdateShortenedUrlsDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Update shortened url by id'})@ApiOkResponse({description: 'Update shortened url by id', content: undefined})@Put(':id')@ApiOperation({summary: 'Update shortened url by id'})\n                \n            \n\n                    \n                        \n                            Defined in src/Controllers/ShortenedUrls/shortened-urls.controller.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateShortenedUrlsDto\n                                            \n                                                            UpdateShortenedUrlsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Delete,\n  UseGuards,\n  Request,\n  Put,\n  HttpCode,\n  HttpStatus,\n} from '@nestjs/common';\nimport { JwtAuthGuard } from 'src/Services/Auth/guards/jwt-auth.guard';\nimport { CreateShortenedUrlsService } from 'src/Services/ShortenedUrls/create-shortened-urls.service';\nimport { DeleteShortenedUrlsService } from 'src/Services/ShortenedUrls/delete-shortened-urls.service';\nimport { CreateShortenedUrlsDto } from 'src/Services/ShortenedUrls/dto/create-shortened-urls.dto';\nimport { UpdateShortenedUrlsDto } from 'src/Services/ShortenedUrls/dto/update-shortened-urls.dto';\nimport { ListShortenedUrlsService } from 'src/Services/ShortenedUrls/list-shortened-urls.service';\nimport { UpdatetShortenedUrlsService } from 'src/Services/ShortenedUrls/update-shortened-urls.service';\nimport {\n  ApiCreatedResponse,\n  ApiNoContentResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n} from '@nestjs/swagger';\n\n@Controller('')\n@ApiTags('Shortened Urls')\nexport class ShortenedUrlsController {\n  constructor(\n    private readonly _listShortenedUrlsService: ListShortenedUrlsService,\n    private readonly _createShortenedUrlsService: CreateShortenedUrlsService,\n    private readonly _updatetShortenedUrlsService: UpdatetShortenedUrlsService,\n    private readonly __deleteShortenedUrlsService: DeleteShortenedUrlsService,\n  ) {}\n\n  @HttpCode(HttpStatus.OK)\n  @Get(':shortUrl')\n  @ApiOperation({ summary: 'Returns the URL for redirection' })\n  @ApiOkResponse({\n    description: 'Find shortened URL by shortUrl',\n    content: {\n      'application/json': {\n        example: {\n          url: 'www.google.com',\n        },\n      },\n    },\n  })\n  async redirect(@Param('shortUrl') shortUrl: string) {\n    return await this._listShortenedUrlsService.redirect(shortUrl);\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @UseGuards(JwtAuthGuard)\n  @Get('user-urls/:userId')\n  @ApiOperation({ summary: 'Returns all URLs by user' })\n  @ApiOkResponse({\n    description: 'Find all shortened URL by user',\n    content: {\n      'application/json': {\n        example: [\n          {\n            id: 1,\n            originalUrl: 'www.google.com',\n            shortUrl: 'http://localhost:8080/avwAb8',\n            clickCount: 6,\n            updatedAt: '2024-01-21T14:56:35.867Z',\n          },\n          {\n            id: 2,\n            originalUrl: 'www.facebook.com',\n            shortUrl: 'http://localhost:8080/avx4b8',\n            clickCount: 6,\n            updatedAt: '2024-01-21T14:52:35.867Z',\n          },\n        ],\n      },\n    },\n  })\n  async findByUserId(@Param('userId') userId: number) {\n    return await this._listShortenedUrlsService.findByUserId(userId);\n  }\n\n  @HttpCode(HttpStatus.CREATED)\n  @Post()\n  @ApiOperation({ summary: 'Create a new shortened url' })\n  @ApiCreatedResponse({\n    description: 'Create new shortened url',\n    content: {\n      'application/json': {\n        example: {\n          shortUrl: 'http://localhost:8080/avwAb8',\n        },\n      },\n    },\n  })\n  async shortenUrl(\n    @Body() createShortenedUrlsDto: CreateShortenedUrlsDto,\n    @Request() req,\n  ) {\n    const shortUrl = await this._createShortenedUrlsService.create(\n      createShortenedUrlsDto,\n      req.userId,\n    );\n    return { shortUrl };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({ summary: 'Update shortened url by id' })\n  @ApiOkResponse({\n    description: 'Update shortened url by id',\n    content: {\n      'application/json': {\n        example: {\n          id: 3,\n          originalUrl: 'www.googlex.com',\n          shortUrl: 'http://localhost:8080/avwAb8',\n          clickCount: 6,\n          updatedAt: '2024-01-21T14:56:35.867Z',\n        },\n      },\n    },\n  })\n  @Put(':id')\n  @ApiOperation({ summary: 'Update shortened url by id' })\n  update(\n    @Param('id') id: number,\n    @Body() updateShortenedUrlsDto: UpdateShortenedUrlsDto,\n    @Request() req,\n  ) {\n    return this._updatetShortenedUrlsService.update(\n      +id,\n      updateShortenedUrlsDto,\n      req.user.userId,\n    );\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Delete(':id')\n  @ApiNoContentResponse({\n    description: 'Remove shortened url by id',\n  })\n  @ApiOperation({ summary: 'Delete shortened url by id' })\n  remove(@Param('id') id: number, @Request() req) {\n    return this.__deleteShortenedUrlsService.remove(id, req.user.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ShortenedUrlsModel.html":{"url":"entities/ShortenedUrlsModel.html","title":"entity - ShortenedUrlsModel","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ShortenedUrlsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Entities/ShortenedUrls/shortened-urls.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                clickCount\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                originalUrl\n                            \n                            \n                                    \n                                shortUrl\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {name: 'active', default: () => true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/ShortenedUrls/shortened-urls.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clickCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('integer', {name: 'click_count', default: () => 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/ShortenedUrls/shortened-urls.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamptz', name: 'created_at', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/ShortenedUrls/shortened-urls.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamptz', name: 'deleted_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/ShortenedUrls/shortened-urls.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'integer', name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/ShortenedUrls/shortened-urls.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        originalUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'original_url'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/ShortenedUrls/shortened-urls.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        shortUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'short_url', unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/ShortenedUrls/shortened-urls.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamptz', name: 'updated_at', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/ShortenedUrls/shortened-urls.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, users => users.shortenedUrls)@JoinColumn(['undefined'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/ShortenedUrls/shortened-urls.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('integer', {name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/ShortenedUrls/shortened-urls.entity.ts:31\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  Index,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { UsersModel } from '../Users/user.entity';\n\n@Index('shortened_urls_pkey', ['id'], { unique: true })\n@Index('shortened_urls_short_url_key', ['shortUrl'], { unique: true })\n@Entity('shortened_urls', { schema: process.env.DATABASE_SCHEMA })\nexport class ShortenedUrlsModel {\n  @PrimaryGeneratedColumn({ type: 'integer', name: 'id' })\n  id: number;\n\n  @Column('character varying', { name: 'original_url' })\n  originalUrl: string;\n\n  @Column('character varying', { name: 'short_url', unique: true })\n  shortUrl: string;\n\n  @Column('integer', { name: 'click_count', default: () => '0' })\n  clickCount: number;\n\n  @Column('integer', { name: 'user_id' })\n  userId: number;\n\n  @Column('boolean', { name: 'active', default: () => 'true' })\n  active: boolean;\n\n  @CreateDateColumn({\n    type: 'timestamptz',\n    name: 'created_at',\n    default: () => 'now()',\n  })\n  createdAt: Date;\n\n  @UpdateDateColumn({\n    type: 'timestamptz',\n    name: 'updated_at',\n    default: () => 'now()',\n  })\n  updatedAt: Date;\n\n  @DeleteDateColumn({\n    type: 'timestamptz',\n    name: 'deleted_at',\n    nullable: true,\n  })\n  deletedAt: Date | null;\n\n  @ManyToOne(() => UsersModel, (users) => users.shortenedUrls)\n  @JoinColumn([{ name: 'user_id', referencedColumnName: 'id' }])\n  user: UsersModel;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShortenedUrlsModule.html":{"url":"modules/ShortenedUrlsModule.html","title":"module - ShortenedUrlsModule","body":"\n                   \n\n\n\n\n    Modules\n    ShortenedUrlsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ShortenedUrlsModule\n\n\n\ncluster_ShortenedUrlsModule_providers\n\n\n\ncluster_ShortenedUrlsModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nShortenedUrlsModule\n\nShortenedUrlsModule\n\nShortenedUrlsModule -->\n\nDatabaseModule->ShortenedUrlsModule\n\n\n\n\n\nAddClickShortenedUrlsService\n\nAddClickShortenedUrlsService\n\nShortenedUrlsModule -->\n\nAddClickShortenedUrlsService->ShortenedUrlsModule\n\n\n\n\n\nCreateShortenedUrlsService\n\nCreateShortenedUrlsService\n\nShortenedUrlsModule -->\n\nCreateShortenedUrlsService->ShortenedUrlsModule\n\n\n\n\n\nDeleteShortenedUrlsService\n\nDeleteShortenedUrlsService\n\nShortenedUrlsModule -->\n\nDeleteShortenedUrlsService->ShortenedUrlsModule\n\n\n\n\n\nListShortenedUrlsService\n\nListShortenedUrlsService\n\nShortenedUrlsModule -->\n\nListShortenedUrlsService->ShortenedUrlsModule\n\n\n\n\n\nUpdatetShortenedUrlsService\n\nUpdatetShortenedUrlsService\n\nShortenedUrlsModule -->\n\nUpdatetShortenedUrlsService->ShortenedUrlsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Services/ShortenedUrls/shortened-urls.provider.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AddClickShortenedUrlsService\n                        \n                        \n                            CreateShortenedUrlsService\n                        \n                        \n                            DeleteShortenedUrlsService\n                        \n                        \n                            ListShortenedUrlsService\n                        \n                        \n                            UpdatetShortenedUrlsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ShortenedUrlsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ShortenedUrlsController } from 'src/Controllers/ShortenedUrls/shortened-urls.controller';\nimport { shortenedUrlsProviders } from 'src/Entities/ShortenedUrls/shortened-urls.provider';\nimport { DatabaseModule } from 'src/database/database.module';\nimport { ListShortenedUrlsService } from './list-shortened-urls.service';\nimport { DeleteShortenedUrlsService } from './delete-shortened-urls.service';\nimport { CreateShortenedUrlsService } from './create-shortened-urls.service';\nimport { AddClickShortenedUrlsService } from './add-click-count-shortened-urls.service';\nimport { UpdatetShortenedUrlsService } from './update-shortened-urls.service';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [ShortenedUrlsController],\n  providers: [\n    ListShortenedUrlsService,\n    CreateShortenedUrlsService,\n    DeleteShortenedUrlsService,\n    AddClickShortenedUrlsService,\n    UpdatetShortenedUrlsService,\n    ...shortenedUrlsProviders,\n  ],\n})\nexport class ShortenedUrlsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateShortenedUrlsDto.html":{"url":"classes/UpdateShortenedUrlsDto.html","title":"class - UpdateShortenedUrlsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateShortenedUrlsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/ShortenedUrls/dto/update-shortened-urls.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  CreateShortenedUrlsDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateShortenedUrlsDto } from './create-shortened-urls.dto';\n\nexport class UpdateShortenedUrlsDto extends PartialType(\n  CreateShortenedUrlsDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/Users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateUsersService.html":{"url":"injectables/UpdateUsersService.html","title":"injectable - UpdateUsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateUsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/Users/update-users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_updateUsersServiceRepository: Repository, _listUsersService: ListUsersService)\n                    \n                \n                        \n                            \n                                Defined in src/Services/Users/update-users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _updateUsersServiceRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _listUsersService\n                                                  \n                                                        \n                                                                        ListUsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/Users/update-users.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Updates an existing user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user to be updated.\n\n\n                                            \n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn object containing the updated data of the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the updated user.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { UsersModel } from 'src/Entities/Users/user.entity';\nimport { Repository } from 'typeorm';\nimport { generateHash } from 'src/utils/password.utils';\nimport { ListUsersService } from './list-users.service';\n\n@Injectable()\nexport class UpdateUsersService {\n  constructor(\n    @Inject('USERS_REPOSITORY')\n    private readonly _updateUsersServiceRepository: Repository,\n    private readonly _listUsersService: ListUsersService,\n  ) {}\n\n  /**\n   * Updates an existing user.\n   *\n   * @param id - The ID of the user to be updated.\n   * @param updateUserDto - An object containing the updated data of the user.\n   * @throws NotFoundException - Thrown if no user is found with the provided ID.\n   * @returns A promise that resolves to the updated user.\n   */\n  async update(id: number, updateUserDto: UpdateUserDto): Promise {\n    const oldUser = await this._listUsersService.findOne(id);\n\n    if (oldUser.email !== updateUserDto.email) {\n      await this._listUsersService.isEmailRegistered(updateUserDto.email);\n    }\n\n    let passowrdHash = oldUser.password;\n    if (updateUserDto.password) {\n      passowrdHash = await generateHash(updateUserDto.password);\n    }\n\n    const user = await this._updateUsersServiceRepository.preload({\n      ...updateUserDto,\n      id,\n      password: passowrdHash,\n    });\n\n    return await this._updateUsersServiceRepository.save(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdatetShortenedUrlsService.html":{"url":"injectables/UpdatetShortenedUrlsService.html","title":"injectable - UpdatetShortenedUrlsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdatetShortenedUrlsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/ShortenedUrls/update-shortened-urls.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_updateShortenedUrlsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/Services/ShortenedUrls/update-shortened-urls.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _updateShortenedUrlsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateShortenedUrlsDto: UpdateShortenedUrlsDto, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Services/ShortenedUrls/update-shortened-urls.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the shortened URL.\n\n\n                                            \n                                        \n                                        \n                                                updateShortenedUrlsDto\n                                            \n                                                            UpdateShortenedUrlsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDTO containing details for updating a shortened URL.\n\n\n                                            \n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe updated shortened URL details.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { ShortenedUrlsModel } from 'src/Entities/ShortenedUrls/shortened-urls.entity';\nimport { UpdateShortenedUrlsDto } from './dto/update-shortened-urls.dto';\n\n@Injectable()\nexport class UpdatetShortenedUrlsService {\n  constructor(\n    @Inject('SHORTENEDURLS_REPOSITORY')\n    private readonly _updateShortenedUrlsRepository: Repository,\n  ) {}\n\n  /**\n   * @description Update a shortened URL by its ID and user ID.\n   * @param {number} id - The ID of the shortened URL.\n   * @param {UpdateShortenedUrlsDto} updateShortenedUrlsDto - DTO containing details for updating a shortened URL.\n   * @param {number} userId - The ID of the user.\n   * @returns {Promise} - The updated shortened URL details.\n   */\n  async update(\n    id: number,\n    updateShortenedUrlsDto: UpdateShortenedUrlsDto,\n    userId: number,\n  ): Promise {\n    await this._updateShortenedUrlsRepository.findOneOrFail({\n      where: { id, userId },\n    });\n\n    const updateBody = await this._updateShortenedUrlsRepository.preload({\n      id,\n      ...updateShortenedUrlsDto,\n    });\n    return await this._updateShortenedUrlsRepository.save(updateBody);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserMiddleware.html":{"url":"injectables/UserMiddleware.html","title":"injectable - UserMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/user.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/common/middlewares/user.middleware.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe JWT service for decoding tokens.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: any, next: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/middlewares/user.middleware.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object.\n\n\n                                            \n                                        \n                                        \n                                                res\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe response object.\n\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe next function.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class UserMiddleware implements NestMiddleware {\n  /**\n   * @description Creates an instance of the UserMiddleware.\n   * @param {JwtService} jwtService - The JWT service for decoding tokens.\n   */\n  constructor(private readonly jwtService: JwtService) {}\n\n  /**\n   * @description Checks for the Authorization header, decodes the JWT token, and sets the user ID in the request.\n   * @param {any} req - The request object.\n   * @param {any} res - The response object.\n   * @param {() => void} next - The next function.\n   */\n  use(req: any, res: any, next: () => void) {\n    // Check for Authorization header\n    if (!req.headers.authorization) {\n      req.userId = null;\n      next();\n      return;\n    }\n\n    const [, token] = req.headers.authorization.split(' ');\n\n    try {\n      const payload = this.jwtService.decode(token);\n      req.userId = payload.id;\n    } catch (error) {\n      req.userId = null;\n    }\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Controllers/Users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.CREATED)@ApiOperation({summary: 'Create a new user'})@ApiCreatedResponse({description: 'Create new user', content: undefined})@ApiConflictResponse({description: 'There is already a registered user with this email.', content: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/Controllers/Users/users.controller.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@HttpCode(HttpStatus.OK)@Get()@ApiOperation({summary: 'Find all users'})@ApiOkResponse({description: 'Find all users', content: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/Controllers/Users/users.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@HttpCode(HttpStatus.OK)@Get(':id')@ApiOperation({summary: 'Find an user by id'})@ApiOkResponse({description: 'Find user by id', content: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/Controllers/Users/users.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Update a user by id'})@ApiConflictResponse({description: 'There is already a registered user with this email.', content: undefined})@ApiOkResponse({description: 'Update user by id', content: undefined})@Put(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/Controllers/Users/users.controller.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Put,\n  HttpCode,\n  HttpStatus,\n  UseGuards,\n} from '@nestjs/common';\nimport { CreateUsersService } from 'src/Services/Users/create-users.service';\nimport { CreateUserDto } from 'src/Services/Users/dto/create-user.dto';\nimport { UpdateUserDto } from 'src/Services/Users/dto/update-user.dto';\nimport { ListUsersService } from 'src/Services/Users/list-users.service';\nimport { UpdateUsersService } from 'src/Services/Users/update-users.service';\nimport {\n  ApiConflictResponse,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { JwtAuthGuard } from 'src/Services/Auth/guards/jwt-auth.guard';\n\n@Controller('users')\n@ApiTags('Users')\nexport class UsersController {\n  constructor(\n    private readonly _listUsersServiceRepository: ListUsersService,\n    private readonly _createUsersServiceRepository: CreateUsersService,\n    private readonly _updateUsersServiceRepository: UpdateUsersService,\n  ) {}\n\n  @UseGuards(JwtAuthGuard)\n  @HttpCode(HttpStatus.OK)\n  @Get()\n  @ApiOperation({ summary: 'Find all users' })\n  @ApiOkResponse({\n    description: 'Find all users',\n    content: {\n      'application/json': {\n        example: [\n          {\n            id: 1,\n            email: 'bruno@email.com',\n            active: true,\n            createdAt: '2024-01-21T13:05:29.581Z',\n            updatedAt: '2024-01-21T13:05:29.581Z',\n          },\n          {\n            id: 2,\n            email: 'gabriel@email.com',\n            active: true,\n            createdAt: '2024-01-21T14:42:38.922Z',\n            updatedAt: '2024-01-21T14:42:38.922Z',\n          },\n        ],\n      },\n    },\n  })\n  findAll() {\n    return this._listUsersServiceRepository.findAll();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @HttpCode(HttpStatus.OK)\n  @Get(':id')\n  @ApiOperation({ summary: 'Find an user by id' })\n  @ApiOkResponse({\n    description: 'Find user by id',\n    content: {\n      'application/json': {\n        example: {\n          id: 1,\n          email: 'bruno@email.com',\n          active: true,\n          createdAt: '2024-01-21T13:05:29.581Z',\n          updatedAt: '2024-01-21T13:05:29.581Z',\n        },\n      },\n    },\n  })\n  findOne(@Param('id') id: string) {\n    return this._listUsersServiceRepository.findOne(+id);\n  }\n\n  @Post()\n  @HttpCode(HttpStatus.CREATED)\n  @ApiOperation({ summary: 'Create a new user' })\n  @ApiCreatedResponse({\n    description: 'Create new user',\n    content: {\n      'application/json': {\n        example: {\n          email: 'brunao@email.com',\n          id: 1,\n          active: true,\n          createdAt: '2024-01-21T14:42:38.922Z',\n          updatedAt: '2024-01-21T14:42:38.922Z',\n        },\n      },\n    },\n  })\n  @ApiConflictResponse({\n    description: 'There is already a registered user with this email.',\n    content: {\n      'application/json': {\n        example: {\n          path: '/users',\n          timestamp: '2024-01-21T14:41:43.707Z',\n          errorList: {\n            message: 'There is already a registered user with this email.',\n            error: 'Conflict',\n            statusCode: 409,\n          },\n        },\n      },\n    },\n  })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this._createUsersServiceRepository.create(createUserDto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({ summary: 'Update a user by id' })\n  @ApiConflictResponse({\n    description: 'There is already a registered user with this email.',\n    content: {\n      'application/json': {\n        example: {\n          path: '/users',\n          timestamp: '2024-01-21T14:41:43.707Z',\n          errorList: {\n            message: 'There is already a registered user with this email.',\n            error: 'Conflict',\n            statusCode: 409,\n          },\n        },\n      },\n    },\n  })\n  @ApiOkResponse({\n    description: 'Update user by id',\n    content: {\n      'application/json': {\n        example: {\n          id: 1,\n          email: 'brunoupdate@email.com',\n          active: true,\n          createdAt: '2024-01-21T13:05:29.581Z',\n          updatedAt: '2024-01-21T13:05:29.581Z',\n        },\n      },\n    },\n  })\n  @Put(':id')\n  update(@Param('id') id: number, @Body() updateUserDto: UpdateUserDto) {\n    return this._updateUsersServiceRepository.update(+id, updateUserDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UsersModel.html":{"url":"entities/UsersModel.html","title":"entity - UsersModel","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UsersModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Entities/Users/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                shortenedUrls\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {name: 'active', default: () => true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Users/user.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamptz', name: 'created_at', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Users/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'email', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Users/user.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'integer', name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Users/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@Column('character varying', {name: 'password', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Users/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        shortenedUrls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShortenedUrlsModel[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, shortenedUrls => shortenedUrls.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Users/user.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamptz', name: 'updated_at', default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Users/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Exclude } from 'class-transformer';\nimport { ShortenedUrlsModel } from '../ShortenedUrls/shortened-urls.entity';\n\n@Index('users_pkey', ['id'], { unique: true })\n@Entity('users', { schema: process.env.DATABASE_SCHEMA })\nexport class UsersModel {\n  @PrimaryGeneratedColumn({ type: 'integer', name: 'id' })\n  id: number;\n\n  @Column('character varying', { name: 'email', length: 255 })\n  email: string;\n\n  @Exclude()\n  @Column('character varying', { name: 'password', length: 255 })\n  password: string;\n\n  @Column('boolean', { name: 'active', default: () => 'true' })\n  active: boolean;\n\n  @CreateDateColumn({\n    type: 'timestamptz',\n    name: 'created_at',\n    default: () => 'now()',\n  })\n  createdAt: Date;\n\n  @UpdateDateColumn({\n    type: 'timestamptz',\n    name: 'updated_at',\n    default: () => 'now()',\n  })\n  updatedAt: Date;\n\n  @OneToMany(() => ShortenedUrlsModel, (shortenedUrls) => shortenedUrls.user)\n  shortenedUrls: ShortenedUrlsModel[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\n\n\nListUsersService \n\nListUsersService \n\nListUsersService  -->\n\nUsersModule->ListUsersService \n\n\n\n\n\nCreateUsersService\n\nCreateUsersService\n\nUsersModule -->\n\nCreateUsersService->UsersModule\n\n\n\n\n\nListUsersService\n\nListUsersService\n\nUsersModule -->\n\nListUsersService->UsersModule\n\n\n\n\n\nUpdateUsersService\n\nUpdateUsersService\n\nUsersModule -->\n\nUpdateUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Services/Users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateUsersService\n                        \n                        \n                            ListUsersService\n                        \n                        \n                            UpdateUsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ListUsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersController } from 'src/Controllers/Users/users.controller';\nimport { usersProviders } from 'src/Entities/Users/user.provider';\nimport { DatabaseModule } from 'src/database/database.module';\nimport { ListUsersService } from './list-users.service';\nimport { CreateUsersService } from './create-users.service';\nimport { UpdateUsersService } from './update-users.service';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [UsersController],\n  providers: [\n    ListUsersService,\n    CreateUsersService,\n    UpdateUsersService,\n    ...usersProviders,\n  ],\n  exports: [ListUsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Controllers/Auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/Controllers/ShortenedUrls/shortened-urls.controller.ts\n            \n            controller\n            ShortenedUrlsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/Controllers/Users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/Entities/ShortenedUrls/shortened-urls.entity.ts\n            \n            entity\n            ShortenedUrlsModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Entities/ShortenedUrls/shortened-urls.entity.ts\n            \n            class\n            ShortenedUrlsModel\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/Entities/ShortenedUrls/shortened-urls.provider.ts\n            \n            variable\n            shortenedUrlsProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Entities/Users/user.entity.ts\n            \n            entity\n            UsersModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Entities/Users/user.entity.ts\n            \n            class\n            UsersModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/Entities/Users/user.provider.ts\n            \n            variable\n            usersProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Services/Auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/Services/Auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Services/Auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Services/Auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Services/Auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Services/Auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Services/ShortenedUrls/add-click-count-shortened-urls.service.ts\n            \n            injectable\n            AddClickShortenedUrlsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Services/ShortenedUrls/create-shortened-urls.service.ts\n            \n            injectable\n            CreateShortenedUrlsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/Services/ShortenedUrls/delete-shortened-urls.service.ts\n            \n            injectable\n            DeleteShortenedUrlsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Services/ShortenedUrls/dto/create-shortened-urls.dto.ts\n            \n            class\n            CreateShortenedUrlsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/Services/ShortenedUrls/dto/update-shortened-urls.dto.ts\n            \n            class\n            UpdateShortenedUrlsDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Services/ShortenedUrls/list-shortened-urls.service.ts\n            \n            injectable\n            ListShortenedUrlsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/Services/ShortenedUrls/update-shortened-urls.service.ts\n            \n            injectable\n            UpdatetShortenedUrlsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Services/Users/create-users.service.ts\n            \n            injectable\n            CreateUsersService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/Services/Users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/Services/Users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Services/Users/list-users.service.ts\n            \n            injectable\n            ListUsersService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/Services/Users/update-users.service.ts\n            \n            injectable\n            UpdateUsersService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/common/filters/http-all-exception.filter.ts\n            \n            class\n            HttpAllExceptionFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/filters/model-not-found.exception.filter.ts\n            \n            class\n            ModelNotFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/logging.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/middlewares/user.middleware.ts\n            \n            injectable\n            UserMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/docs/swagger.ts\n            \n            variable\n            swagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/password.utils.ts\n            \n            variable\n            comparePassword\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/password.utils.ts\n            \n            variable\n            generateHash\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/password.utils.ts\n            \n            variable\n            SALT_ROUNDS\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.2.0\n        \n            @nestjs/typeorm : ^10.0.1\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            husky : ^8.0.3\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.11.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.19\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2024 Bruno Colpani\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShortenedUrlsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ShortenedUrlsModule\n\n\n\ncluster_ShortenedUrlsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nShortenedUrlsModule\n\nShortenedUrlsModule\n\nShortenedUrlsModule -->\n\nDatabaseModule->ShortenedUrlsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAppModule -->\n\nShortenedUrlsModule->AppModule\n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nListUsersService \n\nListUsersService \n\nListUsersService  -->\n\nUsersModule->ListUsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nAddClickShortenedUrlsService\n\nAddClickShortenedUrlsService\n\nShortenedUrlsModule -->\n\nAddClickShortenedUrlsService->ShortenedUrlsModule\n\n\n\n\n\nCreateShortenedUrlsService\n\nCreateShortenedUrlsService\n\nShortenedUrlsModule -->\n\nCreateShortenedUrlsService->ShortenedUrlsModule\n\n\n\n\n\nDeleteShortenedUrlsService\n\nDeleteShortenedUrlsService\n\nShortenedUrlsModule -->\n\nDeleteShortenedUrlsService->ShortenedUrlsModule\n\n\n\n\n\nListShortenedUrlsService\n\nListShortenedUrlsService\n\nShortenedUrlsModule -->\n\nListShortenedUrlsService->ShortenedUrlsModule\n\n\n\n\n\nUpdatetShortenedUrlsService\n\nUpdatetShortenedUrlsService\n\nShortenedUrlsModule -->\n\nUpdatetShortenedUrlsService->ShortenedUrlsModule\n\n\n\n\n\nCreateUsersService\n\nCreateUsersService\n\nUsersModule -->\n\nCreateUsersService->UsersModule\n\n\n\n\n\nListUsersService\n\nListUsersService\n\nUsersModule -->\n\nListUsersService->UsersModule\n\n\n\n\n\nUpdateUsersService\n\nUpdateUsersService\n\nUsersModule -->\n\nUpdateUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            comparePassword   (src/.../password.utils.ts)\n                        \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            generateHash   (src/.../password.utils.ts)\n                        \n                        \n                            SALT_ROUNDS   (src/.../password.utils.ts)\n                        \n                        \n                            shortenedUrlsProviders   (src/.../shortened-urls.provider.ts)\n                        \n                        \n                            swagger   (src/.../swagger.ts)\n                        \n                        \n                            usersProviders   (src/.../user.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/password.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        comparePassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  password: string,\n  hashedPassword: string,\n): Promise => {\n  const isMatch = await compare(password, hashedPassword);\n  return isMatch;\n}\n                    \n                \n\n            \n                \n                    Compara uma senha com seu hash correspondente usando bcrypt.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateHash\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (password: string): Promise => {\n  const hashedPassword = await hash(password, SALT_ROUNDS);\n  return hashedPassword;\n}\n                    \n                \n\n            \n                \n                    Gera o hash de uma senha usando bcrypt.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SALT_ROUNDS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n\n\n        \n    \n\n    src/database.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'DATA_SOURCE',\n    useFactory: async (configService: ConfigService) => {\n      const dataSource = new DataSource({\n        type: 'postgres',\n        host: configService.get('DATABASE_HOST'),\n        port: configService.get('DATABASE_PORT'),\n        database: configService.get('DATABASE_NAME'),\n        schema: configService.get('DATABASE_SCHEMA'),\n        username: configService.get('DATABASE_USER'),\n        password: configService.get('DATABASE_PASSWORD'),\n        entities: [__dirname + '/../**/*.entity.js'],\n        synchronize: false,\n      });\n\n      return dataSource.initialize();\n    },\n    inject: [ConfigService],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/Entities/ShortenedUrls/shortened-urls.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        shortenedUrlsProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'SHORTENEDURLS_REPOSITORY',\n    useFactory: (dataSource: DataSource) =>\n      dataSource.getRepository(ShortenedUrlsModel),\n    inject: ['DATA_SOURCE'],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/docs/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        swagger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: NestExpressApplication): void => {\n  const config = new DocumentBuilder()\n    .setTitle('Rest API Shortened Urls')\n    .setDescription('Example Rest API Shortened Urls')\n    .setVersion('1.0')\n    .addSecurity('Token', {\n      type: 'http',\n      scheme: 'bearer',\n      bearerFormat: 'JWT',\n    })\n    .addSecurityRequirements('Token')\n    .build();\n\n  const document = SwaggerModule.createDocument(app, config);\n  SwaggerModule.setup('docs', app, document);\n}\n                    \n                \n\n\n        \n    \n\n    src/Entities/Users/user.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usersProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'USERS_REPOSITORY',\n    useFactory: (dataSource: DataSource) =>\n      dataSource.getRepository(UsersModel),\n    inject: ['DATA_SOURCE'],\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
